{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport { GraphQLClient } from \"graphql-request\";\nimport { useQuery, useMutation, useSubscription } from \"react-query\"; // import bodyParser from 'body-parser';\n// var jsonParser       = bodyParser.json({limit:1024*1024*2000, type:'application/json'});\n// var urlencodedParser = bodyParser.urlencoded({ extended:true,limit:1024*1024*20,type:'application/x-www-form-urlencoding' })\n// GraphQLClient.use(jsonParser);\n// GraphQLClient.use(urlencodedParser);\n// GRAPHQL - REACTION SERVER\n\nconst endpoint = \"http://localhost:4000/graphql\";\n\nconst getGqlRequestFn = (request, variables) => {\n  const headers = {\n    credentials: 'include',\n    mode: \"cors\"\n  };\n  const graphQLClient = new GraphQLClient(endpoint, headers);\n  graphQLClient.setHeader(\"Accept\", \"application/graphql+json, application/json\");\n  return async () => await graphQLClient.request(request, variables);\n};\n\nexport const useGqlQuery = function (key, query, variables) {\n  _s();\n\n  let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  const queryFn = getGqlRequestFn(query, variables);\n  return useQuery(key, queryFn, options);\n};\n\n_s(useGqlQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\n\nexport const useGqlMutation = function (mutation) {\n  _s2();\n\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const headers = {\n    credentials: 'include',\n    mode: \"cors\"\n  };\n  const graphQLClient = new GraphQLClient(endpoint, headers);\n\n  const mutationFn = async variables => await graphQLClient.request(mutation, variables);\n\n  return useMutation(mutationFn, options);\n};\n\n_s2(useGqlMutation, \"wwwtpB20p0aLiHIvSy5P98MwIUg=\", false, function () {\n  return [useMutation];\n});\n\nexport const useGqlSubscription = function (subscription, variables) {\n  _s3();\n\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const subscriptionFn = getGqlRequestFn(subscription, variables);\n  return useSubscription(subscriptionFn, options);\n}; // REST - JSON SERVER\n// import { useState } from \"react\";\n// import axios from \"axios\";\n// export const useApi = (apiFunc) => {\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n//   const request = async (...args) => {\n//     setLoading(true);\n//     try {\n//       const result = await apiFunc(...args);\n//       setData(result.data);\n//     } catch (err) {\n//       setError(err.message || \"Unexpected Error!\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n//   return {\n//     data,\n//     error,\n//     loading,\n//     request,\n//   };\n// };\n// export const apiClient = axios.create({\n//   baseURL: \"http://localhost:3001\"\n// });\n\n_s3(useGqlSubscription, \"wpUHqjcXqLAwY/8SnoVwGjhIUKk=\", false, function () {\n  return [useSubscription];\n});","map":{"version":3,"names":["GraphQLClient","useQuery","useMutation","useSubscription","endpoint","getGqlRequestFn","request","variables","headers","credentials","mode","graphQLClient","setHeader","useGqlQuery","key","query","options","queryFn","useGqlMutation","mutation","mutationFn","useGqlSubscription","subscription","subscriptionFn"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/api/Api.jsx"],"sourcesContent":["import { GraphQLClient } from \"graphql-request\";\nimport { useQuery, useMutation, useSubscription } from \"react-query\";\n\n// import bodyParser from 'body-parser';\n\n// var jsonParser       = bodyParser.json({limit:1024*1024*2000, type:'application/json'});\n// var urlencodedParser = bodyParser.urlencoded({ extended:true,limit:1024*1024*20,type:'application/x-www-form-urlencoding' })\n\n// GraphQLClient.use(jsonParser);\n// GraphQLClient.use(urlencodedParser);\n\n// GRAPHQL - REACTION SERVER\nconst endpoint = \"http://localhost:4000/graphql\";\n\nconst getGqlRequestFn = (request, variables) => {\n  const headers = {credentials: 'include', mode: \"cors\"};\n  const graphQLClient = new GraphQLClient(endpoint, headers);\n  graphQLClient.setHeader(\"Accept\", \"application/graphql+json, application/json\")\n  return async () => await graphQLClient.request(request, variables);\n}\n\nexport const useGqlQuery = (key, query, variables, options = {}) => {\n  const queryFn = getGqlRequestFn(query, variables);\n  return useQuery(key, queryFn, options);\n};\n\nexport const useGqlMutation = (mutation, options = {}) => {\n  const headers = {credentials: 'include', mode: \"cors\"};\n  const graphQLClient = new GraphQLClient(endpoint, headers);\n  const mutationFn = async variables => await graphQLClient.request(mutation, variables);\n  return useMutation(mutationFn, options);\n};\n\nexport const useGqlSubscription = (subscription, variables, options = {}) => {\n  const subscriptionFn = getGqlRequestFn(subscription, variables);\n  return useSubscription(subscriptionFn, options);\n}\n\n\n\n// REST - JSON SERVER\n// import { useState } from \"react\";\n// import axios from \"axios\";\n\n// export const useApi = (apiFunc) => {\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(\"\");\n//   const [loading, setLoading] = useState(false);\n\n//   const request = async (...args) => {\n//     setLoading(true);\n//     try {\n//       const result = await apiFunc(...args);\n//       setData(result.data);\n//     } catch (err) {\n//       setError(err.message || \"Unexpected Error!\");\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return {\n//     data,\n//     error,\n//     loading,\n//     request,\n//   };\n// };\n\n// export const apiClient = axios.create({\n//   baseURL: \"http://localhost:3001\"\n// });\n\n\n"],"mappings":";;;;AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,eAAhC,QAAuD,aAAvD,C,CAEA;AAEA;AACA;AAEA;AACA;AAEA;;AACA,MAAMC,QAAQ,GAAG,+BAAjB;;AAEA,MAAMC,eAAe,GAAG,CAACC,OAAD,EAAUC,SAAV,KAAwB;EAC9C,MAAMC,OAAO,GAAG;IAACC,WAAW,EAAE,SAAd;IAAyBC,IAAI,EAAE;EAA/B,CAAhB;EACA,MAAMC,aAAa,GAAG,IAAIX,aAAJ,CAAkBI,QAAlB,EAA4BI,OAA5B,CAAtB;EACAG,aAAa,CAACC,SAAd,CAAwB,QAAxB,EAAkC,4CAAlC;EACA,OAAO,YAAY,MAAMD,aAAa,CAACL,OAAd,CAAsBA,OAAtB,EAA+BC,SAA/B,CAAzB;AACD,CALD;;AAOA,OAAO,MAAMM,WAAW,GAAG,UAACC,GAAD,EAAMC,KAAN,EAAaR,SAAb,EAAyC;EAAA;;EAAA,IAAjBS,OAAiB,uEAAP,EAAO;EAClE,MAAMC,OAAO,GAAGZ,eAAe,CAACU,KAAD,EAAQR,SAAR,CAA/B;EACA,OAAON,QAAQ,CAACa,GAAD,EAAMG,OAAN,EAAeD,OAAf,CAAf;AACD,CAHM;;GAAMH,W;UAEJZ,Q;;;AAGT,OAAO,MAAMiB,cAAc,GAAG,UAACC,QAAD,EAA4B;EAAA;;EAAA,IAAjBH,OAAiB,uEAAP,EAAO;EACxD,MAAMR,OAAO,GAAG;IAACC,WAAW,EAAE,SAAd;IAAyBC,IAAI,EAAE;EAA/B,CAAhB;EACA,MAAMC,aAAa,GAAG,IAAIX,aAAJ,CAAkBI,QAAlB,EAA4BI,OAA5B,CAAtB;;EACA,MAAMY,UAAU,GAAG,MAAMb,SAAN,IAAmB,MAAMI,aAAa,CAACL,OAAd,CAAsBa,QAAtB,EAAgCZ,SAAhC,CAA5C;;EACA,OAAOL,WAAW,CAACkB,UAAD,EAAaJ,OAAb,CAAlB;AACD,CALM;;IAAME,c;UAIJhB,W;;;AAGT,OAAO,MAAMmB,kBAAkB,GAAG,UAACC,YAAD,EAAef,SAAf,EAA2C;EAAA;;EAAA,IAAjBS,OAAiB,uEAAP,EAAO;EAC3E,MAAMO,cAAc,GAAGlB,eAAe,CAACiB,YAAD,EAAef,SAAf,CAAtC;EACA,OAAOJ,eAAe,CAACoB,cAAD,EAAiBP,OAAjB,CAAtB;AACD,CAHM,C,CAOP;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;IAtCaK,kB;UAEJlB,e"},"metadata":{},"sourceType":"module"}