{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/inputs/input_fields/TextFieldSimple/TextFieldSimple.tsx\";\nimport React from \"react\";\nimport styles from \"./TextField.module.scss\";\n/**\n * A simple and customized text field\n * @param {String} value value that is passed in as initial value and/or changeable value for the text field\n * @param {String} placeholder a placeholder for the text field\n * @param {Function} onChange called when the text field changes/is typed in and returns the event which contains the value accessed with : (e.target.value)\n * @returns {React.ReactElement} a simple and customized text field\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextFieldSimple = _ref => {\n  let {\n    onChange,\n    value,\n    placeholder,\n    type,\n    name\n  } = _ref;\n\n  function handleOnChange(e) {\n    if (onChange) {\n      onChange(e);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: type,\n    name: name,\n    onChange: handleOnChange,\n    className: styles.textField,\n    value: value,\n    placeholder: placeholder\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = TextFieldSimple;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextFieldSimple\");","map":{"version":3,"names":["React","styles","TextFieldSimple","onChange","value","placeholder","type","name","handleOnChange","e","textField"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/inputs/input_fields/TextFieldSimple/TextFieldSimple.tsx"],"sourcesContent":["import React from \"react\";\nimport styles from \"./TextField.module.scss\";\n\n/**\n * A simple and customized text field\n * @param {String} value value that is passed in as initial value and/or changeable value for the text field\n * @param {String} placeholder a placeholder for the text field\n * @param {Function} onChange called when the text field changes/is typed in and returns the event which contains the value accessed with : (e.target.value)\n * @returns {React.ReactElement} a simple and customized text field\n */\n\n interface Props {\n  onChange?: Function\n  value?: string\n  placeholder?: string \n  type: string\n  name?: string\n}\n\nexport const TextFieldSimple:React.FC<Props> = ({ onChange, value, placeholder, type, name }) => {\n\n  function handleOnChange(e: any) {\n    if (onChange) {\n      onChange(e);\n    }\n  }\n\n  return (\n    <input type={type} name={name} onChange={handleOnChange} className={styles.textField} value={value} placeholder={placeholder}>\n      \n    </input>\n  );\n}\n\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAUA,OAAO,MAAMC,eAA+B,GAAG,QAAkD;EAAA,IAAjD;IAAEC,QAAF;IAAYC,KAAZ;IAAmBC,WAAnB;IAAgCC,IAAhC;IAAsCC;EAAtC,CAAiD;;EAE/F,SAASC,cAAT,CAAwBC,CAAxB,EAAgC;IAC9B,IAAIN,QAAJ,EAAc;MACZA,QAAQ,CAACM,CAAD,CAAR;IACD;EACF;;EAED,oBACE;IAAO,IAAI,EAAEH,IAAb;IAAmB,IAAI,EAAEC,IAAzB;IAA+B,QAAQ,EAAEC,cAAzC;IAAyD,SAAS,EAAEP,MAAM,CAACS,SAA3E;IAAsF,KAAK,EAAEN,KAA7F;IAAoG,WAAW,EAAEC;EAAjH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAbM;KAAMH,e"},"metadata":{},"sourceType":"module"}