{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/VizSettings/SettingsAccordion/Settings/TitleSettings.jsx\",\n    _s = $RefreshSig$();\n\nimport { NumberInput } from \"components/inputs/input_fields/NumberInput/NumberInput\";\nimport { ToggleSwitch } from \"components/inputs/input_fields/ToggleSwitch/ToggleSwitch\";\nimport { SelectField, TextField } from \"components/inputs\";\nimport React, { useState } from \"react\";\nimport styles from \"../SettingsAccordion.module.scss\"; //custom accordian\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const TitleSettings = _ref => {\n  _s();\n\n  let {\n    item,\n    title\n  } = _ref;\n  const [visibility, setVisibility] = useState(false);\n\n  const toggleVisibility = () => {\n    setVisibility(v => !v);\n  };\n\n  const titleFontSize = value => {\n    item.design_settings.titleFontSize = value;\n  };\n\n  const handleHasTitle = () => {\n    item.design_settings.hasTitle = !item.design_settings.hasTitle;\n  };\n\n  const alignmentOptions = [{\n    value: \"start\",\n    label: \"Start\"\n  }, {\n    value: \"center\",\n    label: \"Center\"\n  }, {\n    value: \"end\",\n    label: \"End\"\n  }]; // const alignmentOptions = [\n  //   { value: \"right\", label: \"Right\" },\n  //   { value: \"center\", label: \"Center\" },\n  //   { value: \"left\", label: \"Left\" },\n  // ];\n\n  function textFieldChange(value) {\n    item.titleLabel = value;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.header} ${visibility ? styles.accordionactive : \"\"}`,\n      onClick: toggleVisibility,\n      children: [title, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.accordionicon,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-chevron-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, item.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), visibility && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.setting,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          startChecked: item.design_settings.hasTitle,\n          handleCheck: handleHasTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingwithlabel,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Title Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onSave: textFieldChange,\n          value: item.titleLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingwithlabel,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Alignment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n          onChange: value => {\n            item.design_settings.titleAlignment = value;\n          },\n          options: alignmentOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.setting,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Font Size \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(NumberInput, {\n          startNumber: item.design_settings.titleFontSize,\n          handleNumberChange: titleFontSize\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(TitleSettings, \"mDTlr/aiQFYy0QUi6FtcxgLAtIY=\");\n\n_c = TitleSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"TitleSettings\");","map":{"version":3,"names":["NumberInput","ToggleSwitch","SelectField","TextField","React","useState","styles","TitleSettings","item","title","visibility","setVisibility","toggleVisibility","v","titleFontSize","value","design_settings","handleHasTitle","hasTitle","alignmentOptions","label","textFieldChange","titleLabel","header","accordionactive","accordionicon","name","body","setting","settingwithlabel","titleAlignment"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/VizSettings/SettingsAccordion/Settings/TitleSettings.jsx"],"sourcesContent":["import { NumberInput } from \"components/inputs/input_fields/NumberInput/NumberInput\";\nimport { ToggleSwitch } from \"components/inputs/input_fields/ToggleSwitch/ToggleSwitch\";\nimport { SelectField, TextField } from \"components/inputs\";\nimport React, { useState } from \"react\";\nimport styles from \"../SettingsAccordion.module.scss\";\n\n//custom accordian\nexport const TitleSettings = ({ item, title }) => {\n  const [visibility, setVisibility] = useState(false);\n\n  const toggleVisibility = () => {\n    setVisibility((v) => !v);\n  };\n  const titleFontSize = (value) => {\n    item.design_settings.titleFontSize = value;\n  };\n\n  const handleHasTitle = () => {\n    item.design_settings.hasTitle = !item.design_settings.hasTitle;\n  };\n\n  const alignmentOptions = [\n    { value: \"start\", label: \"Start\" },\n    { value: \"center\", label: \"Center\" },\n    { value: \"end\", label: \"End\" },\n  ];\n  // const alignmentOptions = [\n  //   { value: \"right\", label: \"Right\" },\n  //   { value: \"center\", label: \"Center\" },\n  //   { value: \"left\", label: \"Left\" },\n  // ];\n  function textFieldChange(value) {\n    item.titleLabel = value;\n  }\n\n  return (\n    <>\n      <div\n        key={item.name}\n        className={`${styles.header} ${\n          visibility ? styles.accordionactive : \"\"\n        }`}\n        onClick={toggleVisibility}\n      >\n        {title}\n        <span className={styles.accordionicon}>\n          <i className=\"bi bi-chevron-left\"></i>\n        </span>\n      </div>\n      {visibility && (\n        <div className={styles.body}>\n          <div className={styles.setting}>\n            <span>Title</span>\n            <ToggleSwitch\n              startChecked={item.design_settings.hasTitle}\n              handleCheck={handleHasTitle}\n            ></ToggleSwitch>\n          </div>\n          <div className={styles.settingwithlabel}>\n            <span>Title Name</span>\n            <TextField\n              onSave={textFieldChange}\n              value = {item.titleLabel}\n            ></TextField>\n          </div>\n          <div className={styles.settingwithlabel}>\n            <span>Alignment</span>\n            <SelectField\n              onChange={(value) => {\n                item.design_settings.titleAlignment = value;\n              }}\n              options={alignmentOptions}\n            ></SelectField>\n          </div>\n          <div className={styles.setting}>\n            <span>Font Size </span>\n            <NumberInput\n              startNumber={item.design_settings.titleFontSize}\n              handleNumberChange={titleFontSize}\n            ></NumberInput>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}