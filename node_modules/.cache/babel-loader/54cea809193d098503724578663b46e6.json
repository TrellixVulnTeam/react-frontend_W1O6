{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/VizSettings/VizSettings.jsx\";\nimport React from \"react\"; // import { SelectField } from \"components/inputs\";\n\nimport styles from \"./VizSettings.module.scss\";\nimport { SettingsAccordion } from \"./SettingsAccordion/SettingsAccordion\";\n/**\n * A Settings side menu component that is displayed when a visualization/result is clicked on. Display the settings for that data\n * @param {type} item something\n * @param {type} questions something\n * @param {type} handleDeleteChart something\n * @param {type} handleChartData something\n * @param {type} index something\n * @returns {React.ReactElement} a VizSettings component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VizSettings = _ref => {\n  let {\n    item,\n    questions,\n    handleDeleteChart,\n    handleChartData,\n    index\n  } = _ref;\n  //   const [dataLabels, setDataLabels] = useState(\n  //     item.design_settings.hasDataLabels\n  //   );\n  //   const [chartType, setChartType] = useState(item.type);\n  // function setDataLabels() {\n  //     console.log(props.item.design_settings.hasDataLabels)\n  //     props.item.design_settings.hasDataLabels = !props.item.design_settings.hasDataLabels;\n  // }\n  //   const options = [\n  //     { value: \"linechart\", label: \"Line Chart\" },\n  //     { value: \"horizontalbarchart\", label: \"Horizontal Bar Chart\" },\n  //     { value: \"verticalbarchart\", label: \"Vertical Bar Chart\" },\n  //     { value: \"doughnutchart\", label: \"Doughnut Chart\" },\n  //     { value: \"numbercount\", label: \"Answer Count\" },\n  //   ];\n  //   const questionOptions = [];\n  //   questions.map((question) => {\n  //     let option = { value: question.id, label: question.titleLabel };\n  //     questionOptions.push(option);\n  //   });\n  // const [quesitonOption, setQuestionOptions] = useState(emptyArray)\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.settingscontainer,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: styles.header,\n      children: \"Chart Design\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SettingsAccordion, {\n      item: item,\n      questions: questions,\n      handleChartData: handleChartData,\n      index: index\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.deletechartbox,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteChart,\n        children: \"Delete Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c = VizSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"VizSettings\");","map":{"version":3,"names":["React","styles","SettingsAccordion","VizSettings","item","questions","handleDeleteChart","handleChartData","index","settingscontainer","header","deletechartbox"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/VizSettings/VizSettings.jsx"],"sourcesContent":["import React from \"react\";\n// import { SelectField } from \"components/inputs\";\nimport styles from \"./VizSettings.module.scss\";\nimport { SettingsAccordion } from \"./SettingsAccordion/SettingsAccordion\";\n\n/**\n * A Settings side menu component that is displayed when a visualization/result is clicked on. Display the settings for that data\n * @param {type} item something\n * @param {type} questions something\n * @param {type} handleDeleteChart something\n * @param {type} handleChartData something\n * @param {type} index something\n * @returns {React.ReactElement} a VizSettings component\n */\n\nexport const VizSettings = ({\n  item,\n  questions,\n  handleDeleteChart,\n  handleChartData,\n  index,\n}) => {\n  //   const [dataLabels, setDataLabels] = useState(\n  //     item.design_settings.hasDataLabels\n  //   );\n  //   const [chartType, setChartType] = useState(item.type);\n  // function setDataLabels() {\n  //     console.log(props.item.design_settings.hasDataLabels)\n  //     props.item.design_settings.hasDataLabels = !props.item.design_settings.hasDataLabels;\n  // }\n//   const options = [\n//     { value: \"linechart\", label: \"Line Chart\" },\n//     { value: \"horizontalbarchart\", label: \"Horizontal Bar Chart\" },\n//     { value: \"verticalbarchart\", label: \"Vertical Bar Chart\" },\n//     { value: \"doughnutchart\", label: \"Doughnut Chart\" },\n//     { value: \"numbercount\", label: \"Answer Count\" },\n//   ];\n\n//   const questionOptions = [];\n//   questions.map((question) => {\n//     let option = { value: question.id, label: question.titleLabel };\n//     questionOptions.push(option);\n//   });\n  // const [quesitonOption, setQuestionOptions] = useState(emptyArray)\n\n  return (\n    <div className={styles.settingscontainer}>\n      <span className={styles.header}>Chart Design</span>\n      {/* <div className={styles.settingwithlabel}>\n        <span>Data</span>\n        <SelectField\n          defaultValue={item.type}\n          onChange={(e) => {\n            console.log(e);\n            handleChartData(e, index);\n          }}\n          options={questionOptions}\n          placeholder=\"Select...\"\n        ></SelectField>\n      </div>\n      <div className={styles.settingwithlabel}>\n        <span>Chart Type</span>\n        <SelectField\n          defaultValue={item.type}\n          onChange={(value) => {\n            item.type = value;\n          }}\n          options={options}\n          placeholder={item.type}\n        ></SelectField>\n      </div> */}\n      <SettingsAccordion item={item} questions={questions} handleChartData={handleChartData} index={index}></SettingsAccordion>\n      <div className={styles.deletechartbox}>\n        <button onClick={handleDeleteChart}>Delete Chart</button>\n      </div>\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,iBAAT,QAAkC,uCAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,WAAW,GAAG,QAMrB;EAAA,IANsB;IAC1BC,IAD0B;IAE1BC,SAF0B;IAG1BC,iBAH0B;IAI1BC,eAJ0B;IAK1BC;EAL0B,CAMtB;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACE;EAEA,oBACE;IAAK,SAAS,EAAEP,MAAM,CAACQ,iBAAvB;IAAA,wBACE;MAAM,SAAS,EAAER,MAAM,CAACS,MAAxB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAyBE,QAAC,iBAAD;MAAmB,IAAI,EAAEN,IAAzB;MAA+B,SAAS,EAAEC,SAA1C;MAAqD,eAAe,EAAEE,eAAtE;MAAuF,KAAK,EAAEC;IAA9F;MAAA;MAAA;MAAA;IAAA,QAzBF,eA0BE;MAAK,SAAS,EAAEP,MAAM,CAACU,cAAvB;MAAA,uBACE;QAAQ,OAAO,EAAEL,iBAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QA1BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgCD,CA9DM;KAAMH,W"},"metadata":{},"sourceType":"module"}