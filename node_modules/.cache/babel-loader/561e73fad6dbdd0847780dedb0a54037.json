{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/inputs/input_fields/SearchField/SearchField.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\"; // import { TextField } from \"@mui/material\";\n// import { styled } from \"@mui/material/styles\";\n\nimport styles from \"./SearchField.module.scss\"; // import { useSearchUserGql } from \"api/resources/organization/users\";\n\n/**\n * An input component designed for the NumberScale question. It displays the numbers in a row of clickable circles that highlights the circle that has been clicked\n * @param {String} value value that is passed in as initial value and/or changeable value for the search text field\n * @param {String} placeholder a placeholder for the search text field\n * @param {Function} onChange called when the search text field changes/is typed in\n * @param {Boolean} disabled disables the search text field if true\n * @param {String} org_id the org id of the current org so that the component knows where to search when accessing the database\n * @param {Function} onRowClick is called when a displayed row is clicked on\n * @param {String} searchType a string to let the component know what is to be searched in the database options: \"user\", \"project\", \"contact\", \"audience\"\n * @returns {React.ReactElement} a numberscale clickable component\n */\n//TODO: Implement each searchType\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SearchField = _ref => {\n  _s();\n\n  let {\n    value,\n    placeholder,\n    // label,\n    onChange,\n    disabled,\n    // org_id,\n    onRowClick,\n    searchType // inactive,\n    // align = \"left\",\n    // customStyles,\n\n  } = _ref;\n  const [val, setVal] = useState(value); //eslint-disable-next-line no-unused-vars\n\n  const [options, setOptions] = useState([]);\n  const [showOptions, setShowOptions] = useState(false); // const searchUser = useSearchUserGql(org_id, val);\n\n  const ref = useRef(null);\n\n  const handleChange = event => {\n    setVal(event.target.value); // searchUser(org_id, event.target.value);\n\n    if (searchType === \"user\") {\n      setShowOptions(true); // searchUser.refetch();\n      // console.log(searchUser);\n      //   if (searchUser.data.allUsers.length > 0) {\n      //     setOptions(searchUser.data.allUsers);\n      //   }\n    } // console.log(options);\n\n\n    if (onChange) {\n      onChange(event.target.value);\n    }\n  };\n\n  const handleClickOutside = event => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setShowOptions(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, true);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, true);\n    };\n  }, []);\n\n  const handleRowClick = row => {\n    // alert(\"You clicked on: \" + user.firstname)\n    onRowClick(row);\n    setShowOptions(false);\n    setVal(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      disabled: disabled,\n      className: styles.textfield,\n      value: val,\n      onChange: handleChange,\n      type: \"text\",\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), showOptions && searchType === \"user\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dropdown,\n      ref: ref,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.header}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Position\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), options.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userbox,\n        onClick: () => handleRowClick(user),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [user.firstname, \" \", user.lastname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.addon,\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this)]\n      }, user.firstname, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SearchField, \"ipLISQUjCtawPi+TkkxUUPGh4GA=\");\n\n_c = SearchField;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchField\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styles","SearchField","value","placeholder","onChange","disabled","onRowClick","searchType","val","setVal","options","setOptions","showOptions","setShowOptions","ref","handleChange","event","target","handleClickOutside","current","contains","document","addEventListener","removeEventListener","handleRowClick","row","textfield","dropdown","header","map","user","userbox","firstname","lastname","addon","email","position","company"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/inputs/input_fields/SearchField/SearchField.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\n// import { TextField } from \"@mui/material\";\n// import { styled } from \"@mui/material/styles\";\n\nimport styles from \"./SearchField.module.scss\";\n// import { useSearchUserGql } from \"api/resources/organization/users\";\n\n/**\n * An input component designed for the NumberScale question. It displays the numbers in a row of clickable circles that highlights the circle that has been clicked\n * @param {String} value value that is passed in as initial value and/or changeable value for the search text field\n * @param {String} placeholder a placeholder for the search text field\n * @param {Function} onChange called when the search text field changes/is typed in\n * @param {Boolean} disabled disables the search text field if true\n * @param {String} org_id the org id of the current org so that the component knows where to search when accessing the database\n * @param {Function} onRowClick is called when a displayed row is clicked on\n * @param {String} searchType a string to let the component know what is to be searched in the database options: \"user\", \"project\", \"contact\", \"audience\"\n * @returns {React.ReactElement} a numberscale clickable component\n */\n\n//TODO: Implement each searchType\n\nexport const SearchField = ({\n  value,\n  placeholder,\n  // label,\n  onChange,\n  disabled,\n  // org_id,\n  onRowClick,\n  searchType,\n  // inactive,\n  // align = \"left\",\n  // customStyles,\n}) => {\n  const [val, setVal] = useState(value);\n  //eslint-disable-next-line no-unused-vars\n  const [options, setOptions] = useState([]);\n  const [showOptions, setShowOptions] = useState(false);\n  // const searchUser = useSearchUserGql(org_id, val);\n  const ref = useRef(null);\n\n  const handleChange = (event) => {\n    setVal(event.target.value);\n    \n    // searchUser(org_id, event.target.value);\n    if (searchType === \"user\") {\n      setShowOptions(true);\n      // searchUser.refetch();\n      // console.log(searchUser);\n    //   if (searchUser.data.allUsers.length > 0) {\n    //     setOptions(searchUser.data.allUsers);\n    //   }\n    }\n    // console.log(options);\n    if (onChange) {\n      onChange(event.target.value);\n    }\n  };\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setShowOptions(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, true);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, true);\n    };\n  }, []);\n\n  const handleRowClick = (row) => {\n    // alert(\"You clicked on: \" + user.firstname)\n    onRowClick(row);\n    setShowOptions(false);\n    setVal(\"\");\n  };\n\n  return (\n    <>\n      <input\n        disabled={disabled}\n        className={styles.textfield}\n        value={val}\n        onChange={handleChange}\n        type=\"text\"\n        placeholder={placeholder}\n      ></input>\n      {showOptions && searchType === \"user\" && (\n        <div className={styles.dropdown} ref={ref}>\n          <div className={`${styles.header}`}>\n            <span>User</span>\n            <span>Position</span>\n            <span>Company</span>\n          </div>\n          {options.map((user) => (\n            <div\n              key={user.firstname}\n              className={styles.userbox}\n              onClick={() => handleRowClick(user)}\n            >\n              <span>\n                <div>\n                  {user.firstname} {user.lastname}\n                </div>\n                <div className={styles.addon}>{user.email}</div>\n              </span>\n              <span>{user.position}</span>\n              <span>{user.company}</span>\n            </div>\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}