{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/inputs/input_fields/SelectFieldCustom/SelectFieldCustom.jsx\",\n    _s = $RefreshSig$();\n\n// External\nimport React, { useEffect, useRef, useState } from \"react\"; // Internal\n\nimport styles from \"./SelectFieldCustom.module.scss\";\n/**\n * A custom select input component with no external libraries\n * @class\n * @property {object} options: The options that will be in the select menu. Should be a list of objects with 'label' and 'value' attributes\n * @property {object} defaultValue: One of the options in the options list (object with 'label' and 'value' attributes)\n * @property {boolean} selectMultiple: Whether users should be able to select multiple items\n * @property {function} onChange: A function that will be called when the user changes the selection. The value of the option will be returned.\n * @returns {React.ReactElement} Select Field component\n *\n * @example\n * <SelectField options={options} selectMultiple={false} />\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectFieldCustom = _ref => {\n  _s();\n\n  let {\n    options,\n    // defaultValue,\n    value,\n    // selectMultiple,\n    onChange // placeholder,\n\n  } = _ref;\n  const [show, setShow] = useState(false);\n  const ref = useRef(null);\n\n  const handleClickOutside = event => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setShow(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, true);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, true);\n    };\n  }, []); // const value = () => {\n  //   let values = [];\n  //   if (defaultValue) {\n  //   // console.log(selectMultiple);\n  //   for (let i = 0; i < options.length; i++) {\n  //     if (selectMultiple) {\n  //       for (let j = 0; j < defaultValue.length; j++) {\n  //         if (options[i].value === defaultValue[j]) {\n  //           values.push(options[i]);\n  //         }\n  //       }\n  //     } else {\n  //       if (options[i].value === defaultValue) {\n  //         values.push(options[i]);\n  //       }\n  //     }\n  //   }\n  //   if (values.length === 1) {\n  //     values = values[0];\n  //   }\n  // }\n  //   return values;\n  // };\n  // const [val, setVal] = useState(value);\n\n  const handleChange = option => {\n    // setVal(option);\n    if (option.value !== value.value) {\n      if (onChange) {\n        onChange(option.value);\n        setShow(false);\n      }\n    } // console.log(val);\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.selectContainer,\n    ref: ref,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.select,\n      onClick: () => setShow(!show),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.activeOption,\n        children: [value.icon, value.value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-chevron-down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.dropdown,\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${value === option ? styles.optionActive : styles.option}`,\n        onClick: () => handleChange(option),\n        children: option.label\n      }, value.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SelectFieldCustom, \"+qdnWfaHaOlU+Y7vfICTrjttMg8=\");\n\n_c = SelectFieldCustom;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectFieldCustom\");","map":{"version":3,"names":["React","useEffect","useRef","useState","styles","SelectFieldCustom","options","value","onChange","show","setShow","ref","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleChange","option","selectContainer","select","activeOption","icon","dropdown","map","optionActive","label"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/inputs/input_fields/SelectFieldCustom/SelectFieldCustom.jsx"],"sourcesContent":["// External\nimport React, { useEffect, useRef, useState } from \"react\";\n// Internal\nimport styles from \"./SelectFieldCustom.module.scss\";\n\n/**\n * A custom select input component with no external libraries\n * @class\n * @property {object} options: The options that will be in the select menu. Should be a list of objects with 'label' and 'value' attributes\n * @property {object} defaultValue: One of the options in the options list (object with 'label' and 'value' attributes)\n * @property {boolean} selectMultiple: Whether users should be able to select multiple items\n * @property {function} onChange: A function that will be called when the user changes the selection. The value of the option will be returned.\n * @returns {React.ReactElement} Select Field component\n *\n * @example\n * <SelectField options={options} selectMultiple={false} />\n */\nexport const SelectFieldCustom = ({\n  options,\n  // defaultValue,\n  value,\n  // selectMultiple,\n  onChange,\n  // placeholder,\n}) => {\n  const [show, setShow] = useState(false);\n\n  const ref = useRef(null);\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setShow(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, true);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, true);\n    };\n  }, []);\n  // const value = () => {\n  //   let values = [];\n  //   if (defaultValue) {\n  //   // console.log(selectMultiple);\n  //   for (let i = 0; i < options.length; i++) {\n  //     if (selectMultiple) {\n  //       for (let j = 0; j < defaultValue.length; j++) {\n  //         if (options[i].value === defaultValue[j]) {\n  //           values.push(options[i]);\n  //         }\n  //       }\n  //     } else {\n  //       if (options[i].value === defaultValue) {\n  //         values.push(options[i]);\n  //       }\n  //     }\n  //   }\n  //   if (values.length === 1) {\n  //     values = values[0];\n  //   }\n  // }\n  //   return values;\n  // };\n  // const [val, setVal] = useState(value);\n\n  const handleChange = (option) => {\n    // setVal(option);\n    if (option.value !== value.value) {\n      if (onChange) {\n        onChange(option.value);\n        setShow(false);\n      }\n    }\n    // console.log(val);\n  };\n  return (\n    <div className={styles.selectContainer} ref={ref}>\n      <div className={styles.select} onClick={() => setShow(!show)}>\n        <div className={styles.activeOption}>\n          {value.icon}\n          {value.value}\n        </div>\n        <i className=\"bi bi-chevron-down\"></i>\n      </div>\n      {show && (\n        <div className={styles.dropdown}>\n          {options.map((option) => (\n            <div\n              key={value.value}\n              className={`${\n                value === option ? styles.optionActive : styles.option\n              }`}\n              onClick={() => handleChange(option)}\n            >\n              {option.label}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD,C,CACA;;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,iBAAiB,GAAG,QAO3B;EAAA;;EAAA,IAP4B;IAChCC,OADgC;IAEhC;IACAC,KAHgC;IAIhC;IACAC,QALgC,CAMhC;;EANgC,CAO5B;EACJ,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;EAEA,MAAMQ,GAAG,GAAGT,MAAM,CAAC,IAAD,CAAlB;;EAEA,MAAMU,kBAAkB,GAAIC,KAAD,IAAW;IACpC,IAAIF,GAAG,CAACG,OAAJ,IAAe,CAACH,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,EAAwD;MACtDN,OAAO,CAAC,KAAD,CAAP;IACD;EACF,CAJD;;EAMAT,SAAS,CAAC,MAAM;IACdgB,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCN,kBAAnC,EAAuD,IAAvD;IACA,OAAO,MAAM;MACXK,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCP,kBAAtC,EAA0D,IAA1D;IACD,CAFD;EAGD,CALQ,EAKN,EALM,CAAT,CAXI,CAiBJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMQ,YAAY,GAAIC,MAAD,IAAY;IAC/B;IACA,IAAIA,MAAM,CAACd,KAAP,KAAiBA,KAAK,CAACA,KAA3B,EAAkC;MAChC,IAAIC,QAAJ,EAAc;QACZA,QAAQ,CAACa,MAAM,CAACd,KAAR,CAAR;QACAG,OAAO,CAAC,KAAD,CAAP;MACD;IACF,CAP8B,CAQ/B;;EACD,CATD;;EAUA,oBACE;IAAK,SAAS,EAAEN,MAAM,CAACkB,eAAvB;IAAwC,GAAG,EAAEX,GAA7C;IAAA,wBACE;MAAK,SAAS,EAAEP,MAAM,CAACmB,MAAvB;MAA+B,OAAO,EAAE,MAAMb,OAAO,CAAC,CAACD,IAAF,CAArD;MAAA,wBACE;QAAK,SAAS,EAAEL,MAAM,CAACoB,YAAvB;QAAA,WACGjB,KAAK,CAACkB,IADT,EAEGlB,KAAK,CAACA,KAFT;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAKE;QAAG,SAAS,EAAC;MAAb;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAQGE,IAAI,iBACH;MAAK,SAAS,EAAEL,MAAM,CAACsB,QAAvB;MAAA,UACGpB,OAAO,CAACqB,GAAR,CAAaN,MAAD,iBACX;QAEE,SAAS,EAAG,GACVd,KAAK,KAAKc,MAAV,GAAmBjB,MAAM,CAACwB,YAA1B,GAAyCxB,MAAM,CAACiB,MACjD,EAJH;QAKE,OAAO,EAAE,MAAMD,YAAY,CAACC,MAAD,CAL7B;QAAA,UAOGA,MAAM,CAACQ;MAPV,GACOtB,KAAK,CAACA,KADb;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD,CArFM;;GAAMF,iB;;KAAAA,iB"},"metadata":{},"sourceType":"module"}