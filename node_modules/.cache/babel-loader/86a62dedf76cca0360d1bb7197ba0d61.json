{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/inputs/input_fields/SelectField/SelectField.jsx\";\n// External\nimport React from \"react\"; // import makeAnimated from \"react-select/animated\";\n// import CreatableSelect from \"react-select/creatable\";\n// Internal\n\nimport styles from \"./SelectField.module.scss\"; // const customStyles = {\n//   option: (provided) => ({\n//     ...provided,\n//     padding: 20,\n//   }),\n//   control: (provided, state) => ({\n//     ...provided,\n//     borderColor: state.isFocused || state.hover ? \"green\" : \"\",\n//     boxShadow: \"none\",\n//   }),\n//   singleValue: (provided, state) => {\n//     const opacity = state.isDisabled ? 0.5 : 1;\n//     const transition = \"opacity 300ms\";\n//     return { ...provided, opacity, transition };\n//   },\n// };\n// const animatedComponents = makeAnimated();\n\n/**\n * A select input component\n * @class\n * @property {object} options: The options that will be in the select menu. Should be a list of objects with 'label' and 'value' attributes\n * @property {object} defaultValue: One of the options in the options list (object with 'label' and 'value' attributes)\n * @property {boolean} selectMultiple: Whether users should be able to select multiple items\n * @property {function} onChange: A function that will be called when the user changes the selection. The value of the option will be returned.\n * @returns {React.ReactElement} Select Field\n *\n * @example\n * <SelectField options={options} selectMultiple={false} />\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SelectField = _ref => {\n  let {\n    options,\n    // defaultValue,\n    value,\n    selectMultiple,\n    onChange,\n    placeholder\n  } = _ref;\n\n  // const value = () => {\n  //   let values = [];\n  //   if (defaultValue) {\n  //   // console.log(selectMultiple);\n  //   for (let i = 0; i < options.length; i++) {\n  //     if (selectMultiple) {\n  //       for (let j = 0; j < defaultValue.length; j++) {\n  //         if (options[i].value === defaultValue[j]) {\n  //           values.push(options[i]);\n  //         }\n  //       }\n  //     } else {\n  //       if (options[i].value === defaultValue) {\n  //         values.push(options[i]);\n  //       }\n  //     }\n  //   }\n  //   if (values.length === 1) {\n  //     values = values[0];\n  //   }\n  // } \n  //   return values;\n  // };\n  // const [val, setVal] = useState(value);\n  const handleChange = option => {\n    // setVal(option);\n    if (onChange) {\n      onChange(option.value);\n    } // console.log(val);\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.select,\n    children: \"Yeet\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_c = SelectField;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectField\");","map":{"version":3,"names":["React","styles","SelectField","options","value","selectMultiple","onChange","placeholder","handleChange","option","select"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/inputs/input_fields/SelectField/SelectField.jsx"],"sourcesContent":["// External\nimport React from \"react\";\n// import makeAnimated from \"react-select/animated\";\n// import CreatableSelect from \"react-select/creatable\";\n// Internal\nimport styles from \"./SelectField.module.scss\";\n\n// const customStyles = {\n//   option: (provided) => ({\n//     ...provided,\n\n//     padding: 20,\n//   }),\n//   control: (provided, state) => ({\n//     ...provided,\n//     borderColor: state.isFocused || state.hover ? \"green\" : \"\",\n//     boxShadow: \"none\",\n//   }),\n//   singleValue: (provided, state) => {\n//     const opacity = state.isDisabled ? 0.5 : 1;\n//     const transition = \"opacity 300ms\";\n\n//     return { ...provided, opacity, transition };\n//   },\n// };\n\n// const animatedComponents = makeAnimated();\n\n/**\n * A select input component\n * @class\n * @property {object} options: The options that will be in the select menu. Should be a list of objects with 'label' and 'value' attributes\n * @property {object} defaultValue: One of the options in the options list (object with 'label' and 'value' attributes)\n * @property {boolean} selectMultiple: Whether users should be able to select multiple items\n * @property {function} onChange: A function that will be called when the user changes the selection. The value of the option will be returned.\n * @returns {React.ReactElement} Select Field\n *\n * @example\n * <SelectField options={options} selectMultiple={false} />\n */\nexport const SelectField = ({\n  options,\n  // defaultValue,\n  value,\n  selectMultiple,\n  onChange,\n  placeholder,\n}) => {\n  // const value = () => {\n  //   let values = [];\n  //   if (defaultValue) {\n  //   // console.log(selectMultiple);\n  //   for (let i = 0; i < options.length; i++) {\n  //     if (selectMultiple) {\n  //       for (let j = 0; j < defaultValue.length; j++) {\n  //         if (options[i].value === defaultValue[j]) {\n  //           values.push(options[i]);\n  //         }\n  //       }\n  //     } else {\n  //       if (options[i].value === defaultValue) {\n  //         values.push(options[i]);\n  //       }\n  //     }\n  //   }\n  //   if (values.length === 1) {\n  //     values = values[0];\n  //   }\n  // } \n  //   return values;\n  // };\n  // const [val, setVal] = useState(value);\n\n  const handleChange = (option) => {\n    // setVal(option);\n    if (onChange) {\n      onChange(option.value);\n    }\n    // console.log(val);\n  };\n\n  return (\n    <div className={styles.select}>\n      {/* <CreatableSelect\n        styles={customStyles}\n        className={``}\n        options={options}\n        value={value}\n        isMulti={selectMultiple}\n        onChange={handleChange}\n        components={animatedComponents}\n        placeholder={placeholder}\n      /> */}\n      Yeet\n    </div>\n  );\n};\n"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AACA;;AACA,OAAOC,MAAP,MAAmB,2BAAnB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,WAAW,GAAG,QAOrB;EAAA,IAPsB;IAC1BC,OAD0B;IAE1B;IACAC,KAH0B;IAI1BC,cAJ0B;IAK1BC,QAL0B;IAM1BC;EAN0B,CAOtB;;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA,MAAMC,YAAY,GAAIC,MAAD,IAAY;IAC/B;IACA,IAAIH,QAAJ,EAAc;MACZA,QAAQ,CAACG,MAAM,CAACL,KAAR,CAAR;IACD,CAJ8B,CAK/B;;EACD,CAND;;EAQA,oBACE;IAAK,SAAS,EAAEH,MAAM,CAACS,MAAvB;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CAxDM;KAAMR,W"},"metadata":{},"sourceType":"module"}