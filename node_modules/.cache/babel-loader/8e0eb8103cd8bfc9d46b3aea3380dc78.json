{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/Loading/Loading.jsx\";\nimport React from \"react\"; // import { Player } from \"@lottiefiles/react-lottie-player\";\n\nimport styles from \"./Loading.module.scss\";\n/**\n * The loading circle of doom. Designed to be displayed whenever anything is loading. Size is customizable\n * @param {Int} height height of the image\n * @param {Int} width width of the image\n * @param {Boolean} fullScreen boolean value that determines if it is full screen\n *  * @param {String} message message or error to be displayed underneath the loading circle\n * @returns {React.ReactElement} a loading gif/image component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Loading = _ref => {\n  let {\n    height = 200,\n    width = 200,\n    fullScreen,\n    message\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${fullScreen && styles.fullScreen}`,\n    children: [\"Loading Now...\", message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = Loading;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loading\");","map":{"version":3,"names":["React","styles","Loading","height","width","fullScreen","message"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/Loading/Loading.jsx"],"sourcesContent":["import React from \"react\";\n// import { Player } from \"@lottiefiles/react-lottie-player\";\n\nimport styles from \"./Loading.module.scss\";\n\n/**\n * The loading circle of doom. Designed to be displayed whenever anything is loading. Size is customizable\n * @param {Int} height height of the image\n * @param {Int} width width of the image\n * @param {Boolean} fullScreen boolean value that determines if it is full screen\n *  * @param {String} message message or error to be displayed underneath the loading circle\n * @returns {React.ReactElement} a loading gif/image component\n */\n\nexport const Loading = ({ height = 200, width = 200, fullScreen, message }) => {\n  return (\n    <div className={`${fullScreen && styles.fullScreen}`}>\n      {/* <Player\n        autoplay\n        loop\n        src={require(\"assets/animations/loading_animation.json\")}\n        style={{ height: `${height}px`, width: `${width}px` }}\n      /> */}\n      Loading Now...      \n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,OAAO,GAAG,QAAwD;EAAA,IAAvD;IAAEC,MAAM,GAAG,GAAX;IAAgBC,KAAK,GAAG,GAAxB;IAA6BC,UAA7B;IAAyCC;EAAzC,CAAuD;EAC7E,oBACE;IAAK,SAAS,EAAG,GAAED,UAAU,IAAIJ,MAAM,CAACI,UAAW,EAAnD;IAAA,6BAQGC,OAAO,iBAAI;MAAA,UAAIA;IAAJ;MAAA;MAAA;MAAA;IAAA,QARd;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CAbM;KAAMJ,O"},"metadata":{},"sourceType":"module"}