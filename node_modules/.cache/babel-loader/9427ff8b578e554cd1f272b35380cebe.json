{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/inputs/Forms/SaveForm/SaveForm.jsx\";\nimport React from \"react\"; // import { Container, Row, Col } from \"react-bootstrap\";\n\nimport styles from \"./SaveForm.module.scss\";\n/**\n * A simple form component that takes in an array of objects and neatly displays them individually\n * Example of Fields array: \n * fields={[\n    {\n      label: \"Name\",\n      field: (\n        <TextField\n          value={newName}\n          placeholder=\"Audience Name\"\n          onChange={(e) => setNewName(e.target.value)}\n        ></TextField>\n      ),\n    },\n    {\n      label: \"Description\",\n      field: (\n        <TextField\n          value={newDescription}\n          placeholder=\"Description\"\n          onChange={(e) => setNewDescription(e.target.value)}\n        ></TextField>\n      ),\n    },\n    {\n      label: \"Type\",\n      field: (\n        <SelectField\n          options={options}\n          onChange={onChange}\n        ></SelectField>\n      ),\n    },\n  ]}\n * @param {Array} fields an array of field objects as shown in the example above\n * @returns {Container} a form component as a react-bootstrap container\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SaveForm = _ref => {\n  let {\n    fields\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    // <Container className={styles.container}>\n    //   {fields.map((field, index) => {\n    //     return (\n    //       <Row key={index} className={styles.fieldRow}>\n    //         <Col xs={3} className={styles.label}>\n    //           {field.label}\n    //         </Col>\n    //         <Col xs={9}>\n    //           <Col xs={12} md={10} xl={6}>\n    //             {field.field}\n    //           </Col>\n    //         </Col>\n    //       </Row>\n    //     );\n    //   })}\n    // </Container>\n    //eslint-disable-next-line no-unused-expressions\n    _jsxDEV(\"div\", {\n      children: fields.map(field => {\n        field;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  );\n};\n_c = SaveForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SaveForm\");","map":{"version":3,"names":["React","styles","SaveForm","fields","map","field"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/inputs/Forms/SaveForm/SaveForm.jsx"],"sourcesContent":["import React from \"react\";\n// import { Container, Row, Col } from \"react-bootstrap\";\n\nimport styles from \"./SaveForm.module.scss\";\n\n/**\n * A simple form component that takes in an array of objects and neatly displays them individually\n * Example of Fields array: \n * fields={[\n    {\n      label: \"Name\",\n      field: (\n        <TextField\n          value={newName}\n          placeholder=\"Audience Name\"\n          onChange={(e) => setNewName(e.target.value)}\n        ></TextField>\n      ),\n    },\n    {\n      label: \"Description\",\n      field: (\n        <TextField\n          value={newDescription}\n          placeholder=\"Description\"\n          onChange={(e) => setNewDescription(e.target.value)}\n        ></TextField>\n      ),\n    },\n    {\n      label: \"Type\",\n      field: (\n        <SelectField\n          options={options}\n          onChange={onChange}\n        ></SelectField>\n      ),\n    },\n  ]}\n * @param {Array} fields an array of field objects as shown in the example above\n * @returns {Container} a form component as a react-bootstrap container\n */\n\nexport const SaveForm = ({ fields }) => {\n  return (\n    // <Container className={styles.container}>\n    //   {fields.map((field, index) => {\n    //     return (\n    //       <Row key={index} className={styles.fieldRow}>\n    //         <Col xs={3} className={styles.label}>\n    //           {field.label}\n    //         </Col>\n    //         <Col xs={9}>\n    //           <Col xs={12} md={10} xl={6}>\n    //             {field.field}\n    //           </Col>\n    //         </Col>\n    //       </Row>\n    //     );\n    //   })}\n    // </Container>\n    //eslint-disable-next-line no-unused-expressions\n    <div>{fields.map((field) => {field})}</div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,QAAQ,GAAG,QAAgB;EAAA,IAAf;IAAEC;EAAF,CAAe;EACtC;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MAAA,UAAMA,MAAM,CAACC,GAAP,CAAYC,KAAD,IAAW;QAACA,KAAK;MAAC,CAA7B;IAAN;MAAA;MAAA;MAAA;IAAA;EAlBF;AAoBD,CArBM;KAAMH,Q"},"metadata":{},"sourceType":"module"}