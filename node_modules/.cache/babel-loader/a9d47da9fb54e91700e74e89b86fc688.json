{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/pages/projects/project/results/visualizations/Visualizations.jsx\",\n    _s = $RefreshSig$();\n\n// External\nimport React, { useState, useRef, useEffect } from \"react\";\nimport styles from \"./Visualizations.module.scss\";\nimport { Grid } from \"./Grid\";\nimport { SortableBox } from \"./SortableBox\";\nimport { ChartBox } from \"./ChartBox\";\nimport { DndContext, closestCenter, MouseSensor, TouchSensor, DragOverlay, useSensor, useSensors } from \"@dnd-kit/core\";\nimport { arrayMove, SortableContext, rectSortingStrategy } from \"@dnd-kit/sortable\";\nimport { SplitHorizontal } from \"components/layouts\";\nimport { VizSettings } from \"components/VizSettings/VizSettings\";\nimport { useFetchVisualizationGql, useFetchVisualizationsGql } from \"api/resources/projects/visualizations\"; // Internal\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Visualizations = () => {\n  _s();\n\n  const ref = useRef(null);\n  const [activeId, setActiveId] = useState(null);\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const sensors = useSensors(useSensor(MouseSensor), useSensor(TouchSensor));\n  /* eslint-disable no-unused-vars */\n\n  const fetchVisualization = useFetchVisualizationGql();\n  const fetchVisualizations = useFetchVisualizationsGql();\n\n  const handleClickOutside = event => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setSettingsVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, true);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, true);\n    };\n  }, []);\n  const rankingQuestionData = {\n    labels: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"],\n    // datasets is an array of objects where each object represents a set of data to display corresponding to the labels above. for brevity, we'll keep it at one object\n    datasets: [{\n      label: \"Score\",\n      data: [0, 3, 2, 5, 6, 3, 2, 5, 8, 10, 40],\n      // you can set indiviual colors for each bar\n      backgroundColor: \"#ED9146\",\n      borderWidth: 1\n    }]\n  };\n  const data = {\n    labels: [\"Completed\", \"Open\", \"Unopen\", \"Bounced\"],\n    // datasets is an array of objects where each object represents a set of data to display corresponding to the labels above. for brevity, we'll keep it at one object\n    datasets: [{\n      label: \"Amount\",\n      data: [125, 38, 75, 12],\n      // you can set indiviual colors for each bar\n      backgroundColor: \"#ED9146\",\n      borderWidth: 1\n    }]\n  };\n  const doughnutdata = {\n    labels: [\"9\", \"14\", \"6\", \"None\", \"Does it matter?\", \"As much as he could\"],\n    datasets: [{\n      label: \"# of Votes\",\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: [\"#15bcc7\", \"#7fcfd3\", \"#b5e1df\", \"#ed9146\", \"#edb57e\", \"#f4e3c2\"],\n      borderWidth: 1\n    }]\n  };\n  const lineData = {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n    datasets: [{\n      label: \"RFMG\",\n      data: [12, 145, 345, 314, 132, 344],\n      borderColor: \"#15bcc7\",\n      backgroundColor: \"#15bcc7\"\n    }, {\n      label: \"PMG\",\n      data: [555, 685, 412, 235, 124, 236],\n      borderColor: \"#ed9146\",\n      backgroundColor: \"#ed9146\"\n    }]\n  };\n  const trendedNPSData = {\n    labels: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n    datasets: [{\n      label: \"Score\",\n      data: [54.76, 52.32, 54.72, 61.29],\n      borderColor: \"#15bcc7\",\n      backgroundColor: \"#15bcc7\"\n    }]\n  };\n  const display = [{\n    data: data,\n    total: 250,\n    index: 0,\n    title: \"Participant Percentage\",\n    titleLabel: \"Participant Percentage\",\n    type: \"verticalbarchart\",\n    selected: false,\n    design_settings: {\n      hasDataLabels: true,\n      dataLabelFontSize: 20,\n      dataLabelPosition: \"end\",\n      dataLabelAlignment: \"right\",\n      dataLabelSigFig: 1,\n      dataLabelPercentages: true,\n      hasTitle: true,\n      titleLabel: \"Participant Percentage\",\n      titleFontSize: 12,\n      titleAlignment: \"center\",\n      hasLegend: false,\n      legendPosition: \"top\",\n      legendFontSize: 12,\n      legendPointStyle: true\n    },\n    id: 0\n  }, {\n    data: data,\n    total: 250,\n    index: 0,\n    type: \"numbercount\",\n    title: \"Participants\",\n    titleLabel: \"Participants\",\n    selected: false,\n    design_settings: {\n      hasDataLabels: true,\n      dataLabelFontSize: 12,\n      dataLabelPosition: \"center\",\n      dataLabelAlignment: \"center\",\n      dataLabelSigFig: 1,\n      dataLabelPercentages: true,\n      hasTitle: true,\n      titleLabel: \"Participants\",\n      titleFontSize: 12,\n      titleAlignment: \"center\",\n      hasLegend: true,\n      legendPosition: \"top\",\n      legendFontSize: 12,\n      legendPointStyle: true\n    },\n    id: 1\n  }, {\n    data: lineData,\n    total: 235,\n    index: 0,\n    title: \"Trending Score\",\n    titleLabel: \"Trending Score\",\n    type: \"linechart\",\n    selected: false,\n    design_settings: {\n      hasDataLabels: false,\n      dataLabelFontSize: 12,\n      dataLabelPosition: \"center\",\n      dataLabelAlignment: \"center\",\n      dataLabelSigFig: 1,\n      dataLabelPercentages: false,\n      hasTitle: true,\n      titleLabel: \"Trending Score\",\n      titleFontSize: 12,\n      titleAlignment: \"center\",\n      hasLegend: true,\n      legendPosition: \"top\",\n      legendFontSize: 12,\n      legendPointStyle: true\n    },\n    id: 2\n  }, {\n    data: doughnutdata,\n    total: 250,\n    index: 0,\n    type: \"doughnutchart\",\n    title: \"How much wood could a wood chuck chuck?\",\n    titleLabel: \"How much wood could a wood chuck chuck?\",\n    selected: false,\n    design_settings: {\n      hasDataLabels: true,\n      dataLabelFontSize: 12,\n      dataLabelPosition: \"center\",\n      dataLabelAlignment: \"center\",\n      dataLabelSigFig: 1,\n      dataLabelPercentages: true,\n      hasTitle: true,\n      titleLabel: \"How much wood could a wood chuck chuck?\",\n      titleFontSize: 12,\n      titleAlignment: \"center\",\n      hasLegend: true,\n      legendPosition: \"bottom\",\n      legendFontSize: 12,\n      legendPointStyle: true\n    },\n    id: 3\n  }, {\n    data: rankingQuestionData,\n    total: 250,\n    index: 0,\n    type: \"horizontalbarchart\",\n    title: \"How likely are you to recommend Primary Medical Group to a friend or to a family member?\",\n    titleLabel: \"How likely are you to recommend Primary Medical Group to a friend or to a family member?\",\n    selected: false,\n    design_settings: {\n      hasDataLabels: true,\n      dataLabelFontSize: 12,\n      dataLabelPosition: \"center\",\n      dataLabelAlignment: \"center\",\n      dataLabelSigFig: 0,\n      dataLabelPercentages: true,\n      hasTitle: true,\n      titleLabel: \"How likely are you to recommend Primary Medical Group to a friend or to a family member?\",\n      titleFontSize: 12,\n      titleAlignment: \"center\",\n      hasLegend: false,\n      legendPosition: \"top\",\n      legendFontSize: 12,\n      legendPointStyle: true\n    },\n    id: 4\n  }, {\n    data: trendedNPSData,\n    total: 250,\n    index: 0,\n    type: \"linechart\",\n    title: \"Trended NPS\",\n    titleLabel: \"Trended NPS\",\n    selected: false,\n    design_settings: {\n      hasDataLabels: false,\n      dataLabelFontSize: 12,\n      dataLabelPosition: \"center\",\n      dataLabelAlignment: \"center\",\n      dataLabelSigFig: 1,\n      dataLabelPercentages: true,\n      hasTitle: true,\n      titleLabel: \"Trended NPS\",\n      titleFontSize: 12,\n      titleAlignment: \"center\",\n      hasLegend: true,\n      legendPosition: \"top\",\n      legendFontSize: 12,\n      legendPointStyle: true\n    },\n    id: 5\n  }];\n  const defaultChart = {\n    data: data,\n    total: 250,\n    index: 0,\n    title: \"Participant Percentage\",\n    titleLabel: \"Participant Percentage\",\n    type: \"verticalbarchart\",\n    selected: false,\n    design_settings: {\n      hasDataLabels: true,\n      dataLabelFontSize: 12,\n      dataLabelPosition: \"end\",\n      dataLabelAlignment: \"right\",\n      dataLabelSigFig: 1,\n      dataLabelPercentages: true,\n      hasTitle: true,\n      titleLabel: \"Participant Percentage\",\n      titleFontSize: 12,\n      titleAlignment: \"center\",\n      hasLegend: false,\n      legendPosition: \"top\",\n      legendFontSize: 12,\n      legendPointStyle: true\n    },\n    id: 0\n  };\n  const [items, setItems] = useState(display);\n  const [selectedIndex, setSelectedIndex] = useState();\n\n  function handleDeleteChart() {\n    let index = selectedIndex;\n    console.log(index);\n    var array = items; // make a separate copy of the array\n    // var index = array.indexOf(i)\n\n    if (index !== -1) {\n      array.splice(index, 1);\n      setItems(array);\n    }\n  }\n\n  const handleNewChart = () => {\n    var array = items;\n    defaultChart.index = items.length; // make a separate copy of the array\n\n    array.push(defaultChart);\n    setItems(array);\n    getVisuals();\n  };\n\n  function handleChartData(value, index) {\n    console.log(value);\n    console.log(index);\n    let array = display;\n\n    for (let i = 0; i < display.length; i++) {\n      if (display[i].id === value) {\n        // console.log(i)\n        // console.log(selectedIndex)\n        array[index].data = display[i].data;\n        array[index].title = display[i].title;\n        array[index].titleLabel = display[i].titleLabel;\n        console.log(array[index]);\n        console.log(display[i]);\n      }\n    }\n\n    setItems(array); // items[selectedIndex].data = value;\n  }\n\n  function setItemIndex(item, index) {\n    item.index = index;\n  }\n\n  function getVisuals() {\n    if (fetchVisualizations.isSuccess) {\n      // console.log(fetchVisualizations.data.allVisualizations);\n      let array = fetchVisualizations.data.allVisualizations;\n\n      for (let i = 0; i < array.length; i++) {\n        array[i].data = setData(array[i]);\n      }\n\n      console.log(array);\n      return array;\n    } else {\n      console.log(\"Fetch visualizaitons failed\");\n      return [];\n    }\n  }\n\n  function setData(visualization) {\n    //returns the formatted data for the charts\n    if (visualization.type === \"horizontalbarchart\") {\n      let labels = [];\n\n      for (let i = 0; i < visualization.Question.Choices.length; i++) {\n        labels.push(visualization.Question.Choices[i].choice_value);\n      }\n\n      return {\n        labels: labels,\n        // datasets is an array of objects where each object represents a set of data to display corresponding to the labels above. for brevity, we'll keep it at one object\n        datasets: [{\n          // you can set indiviual colors for each bar\n          label: \"# of Votes\",\n          data: [1, 1, 0, 0, 1, 0],\n          backgroundColor: [\"#15bcc7\", \"#7fcfd3\", \"#b5e1df\", \"#ed9146\", \"#edb57e\", \"#f4e3c2\"],\n          borderWidth: 1\n        }]\n      };\n    } else {\n      return {};\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [fetchVisualizations.isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 41\n    }, this), fetchVisualizations.isError && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 39\n    }, this), fetchVisualizations.isSuccess && /*#__PURE__*/_jsxDEV(SplitHorizontal, {\n      fullHeight: true,\n      divider: settingsVisible,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.visualizations,\n        children: /*#__PURE__*/_jsxDEV(DndContext, {\n          sensors: sensors,\n          collisionDetection: closestCenter,\n          onDragStart: handleDragStart,\n          onDragEnd: handleDragEnd,\n          onDragCancel: handleDragCancel,\n          children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n            items: items,\n            strategy: rectSortingStrategy,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              columns: 4,\n              children: [items.map((item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [setItemIndex(item, index), /*#__PURE__*/_jsxDEV(SortableBox, {\n                  item: item,\n                  index: index,\n                  opensettings: setSettingsVisible // handleDeletion={handleDeleteChart}\n\n                }, item.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.newchartdiv,\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleNewChart,\n                  children: \"New Chart +\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DragOverlay, {\n            adjustScale: true,\n            children: activeId ? /*#__PURE__*/_jsxDEV(ChartBox, {\n              item: activeId,\n              index: items.indexOf(activeId)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 19\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this), settingsVisible ? /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: ref,\n        className: styles.settingscontainer,\n        children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [() => setSelectedIndex(index), item.selected == true && /*#__PURE__*/_jsxDEV(VizSettings, {\n            item: item,\n            index: index,\n            handleDeleteChart: handleDeleteChart,\n            questions: display,\n            handleChartData: handleChartData // index={index}\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true); // function handleDragEnd(event) {\n  //   if (event.over && event.over.id === 'droppable') {\n  //     setIsDropped(true);\n  //   }\n  // }\n\n  function handleDragStart(event) {\n    // console.log(event);\n    setActiveId(event.active.id);\n  }\n\n  function handleDragEnd(event) {\n    const {\n      active,\n      over\n    } = event;\n\n    if (active.id !== over.id) {\n      setItems(items => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n\n    setActiveId(null);\n  }\n\n  function handleDragCancel() {\n    setActiveId(null);\n  }\n};\n\n_s(Visualizations, \"hcx/NjERFg62cfmMFJ588gtuvuw=\", false, function () {\n  return [useSensors, useSensor, useSensor, useFetchVisualizationGql, useFetchVisualizationsGql];\n});\n\n_c = Visualizations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Visualizations\");","map":{"version":3,"names":["React","useState","useRef","useEffect","styles","Grid","SortableBox","ChartBox","DndContext","closestCenter","MouseSensor","TouchSensor","DragOverlay","useSensor","useSensors","arrayMove","SortableContext","rectSortingStrategy","SplitHorizontal","VizSettings","useFetchVisualizationGql","useFetchVisualizationsGql","Visualizations","ref","activeId","setActiveId","settingsVisible","setSettingsVisible","sensors","fetchVisualization","fetchVisualizations","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","rankingQuestionData","labels","datasets","label","data","backgroundColor","borderWidth","doughnutdata","lineData","borderColor","trendedNPSData","display","total","index","title","titleLabel","type","selected","design_settings","hasDataLabels","dataLabelFontSize","dataLabelPosition","dataLabelAlignment","dataLabelSigFig","dataLabelPercentages","hasTitle","titleFontSize","titleAlignment","hasLegend","legendPosition","legendFontSize","legendPointStyle","id","defaultChart","items","setItems","selectedIndex","setSelectedIndex","handleDeleteChart","console","log","array","splice","handleNewChart","length","push","getVisuals","handleChartData","value","i","setItemIndex","item","isSuccess","allVisualizations","setData","visualization","Question","Choices","choice_value","isLoading","isError","visualizations","handleDragStart","handleDragEnd","handleDragCancel","map","newchartdiv","indexOf","settingscontainer","active","over","oldIndex","newIndex"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/pages/projects/project/results/visualizations/Visualizations.jsx"],"sourcesContent":["// External\nimport React, { useState, useRef, useEffect } from \"react\";\nimport styles from \"./Visualizations.module.scss\";\nimport { Grid } from \"./Grid\";\nimport { SortableBox } from \"./SortableBox\";\nimport { ChartBox } from \"./ChartBox\";\n\nimport {\n  DndContext,\n  closestCenter,\n  MouseSensor,\n  TouchSensor,\n  DragOverlay,\n  useSensor,\n  useSensors,\n} from \"@dnd-kit/core\";\nimport {\n  arrayMove,\n  SortableContext,\n  rectSortingStrategy,\n} from \"@dnd-kit/sortable\";\nimport { SplitHorizontal } from \"components/layouts\";\nimport { VizSettings } from \"components/VizSettings/VizSettings\";\nimport {\n  useFetchVisualizationGql,\n  useFetchVisualizationsGql,\n} from \"api/resources/projects/visualizations\";\n\n// Internal\n\nexport const Visualizations = () => {\n  const ref = useRef(null);\n  const [activeId, setActiveId] = useState(null);\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const sensors = useSensors(useSensor(MouseSensor), useSensor(TouchSensor));\n  /* eslint-disable no-unused-vars */\n  const fetchVisualization = useFetchVisualizationGql();\n  const fetchVisualizations = useFetchVisualizationsGql();\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setSettingsVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, true);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, true);\n    };\n  }, []);\n\n  const rankingQuestionData = {\n    labels: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"],\n    // datasets is an array of objects where each object represents a set of data to display corresponding to the labels above. for brevity, we'll keep it at one object\n    datasets: [\n      {\n        label: \"Score\",\n        data: [0, 3, 2, 5, 6, 3, 2, 5, 8, 10, 40],\n        // you can set indiviual colors for each bar\n        backgroundColor: \"#ED9146\",\n        borderWidth: 1,\n      },\n    ],\n  };\n  const data = {\n    labels: [\"Completed\", \"Open\", \"Unopen\", \"Bounced\"],\n    // datasets is an array of objects where each object represents a set of data to display corresponding to the labels above. for brevity, we'll keep it at one object\n    datasets: [\n      {\n        label: \"Amount\",\n        data: [125, 38, 75, 12],\n        // you can set indiviual colors for each bar\n        backgroundColor: \"#ED9146\",\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const doughnutdata = {\n    labels: [\"9\", \"14\", \"6\", \"None\", \"Does it matter?\", \"As much as he could\"],\n    datasets: [\n      {\n        label: \"# of Votes\",\n        data: [12, 19, 3, 5, 2, 3],\n        backgroundColor: [\n          \"#15bcc7\",\n          \"#7fcfd3\",\n          \"#b5e1df\",\n          \"#ed9146\",\n          \"#edb57e\",\n          \"#f4e3c2\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n  const lineData = {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n    datasets: [\n      {\n        label: \"RFMG\",\n        data: [12, 145, 345, 314, 132, 344],\n        borderColor: \"#15bcc7\",\n        backgroundColor: \"#15bcc7\",\n      },\n      {\n        label: \"PMG\",\n        data: [555, 685, 412, 235, 124, 236],\n        borderColor: \"#ed9146\",\n        backgroundColor: \"#ed9146\",\n      },\n    ],\n  };\n  const trendedNPSData = {\n    labels: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n    datasets: [\n      {\n        label: \"Score\",\n        data: [54.76, 52.32, 54.72, 61.29],\n        borderColor: \"#15bcc7\",\n        backgroundColor: \"#15bcc7\",\n      },\n    ],\n  };\n\n  const display = [\n    {\n      data: data,\n      total: 250,\n      index: 0,\n      title: \"Participant Percentage\",\n      titleLabel: \"Participant Percentage\",\n      type: \"verticalbarchart\",\n      selected: false,\n      design_settings: {\n        hasDataLabels: true,\n        dataLabelFontSize: 20,\n        dataLabelPosition: \"end\",\n        dataLabelAlignment: \"right\",\n        dataLabelSigFig: 1,\n        dataLabelPercentages: true,\n        hasTitle: true,\n        titleLabel: \"Participant Percentage\",\n        titleFontSize: 12,\n        titleAlignment: \"center\",\n        hasLegend: false,\n        legendPosition: \"top\",\n        legendFontSize: 12,\n        legendPointStyle: true,\n      },\n      id: 0,\n    },\n    {\n      data: data,\n      total: 250,\n      index: 0,\n      type: \"numbercount\",\n      title: \"Participants\",\n      titleLabel: \"Participants\",\n      selected: false,\n      design_settings: {\n        hasDataLabels: true,\n        dataLabelFontSize: 12,\n        dataLabelPosition: \"center\",\n        dataLabelAlignment: \"center\",\n        dataLabelSigFig: 1,\n        dataLabelPercentages: true,\n        hasTitle: true,\n        titleLabel: \"Participants\",\n        titleFontSize: 12,\n        titleAlignment: \"center\",\n        hasLegend: true,\n        legendPosition: \"top\",\n        legendFontSize: 12,\n        legendPointStyle: true,\n      },\n      id: 1,\n    },\n    {\n      data: lineData,\n      total: 235,\n      index: 0,\n      title: \"Trending Score\",\n      titleLabel: \"Trending Score\",\n      type: \"linechart\",\n      selected: false,\n      design_settings: {\n        hasDataLabels: false,\n        dataLabelFontSize: 12,\n        dataLabelPosition: \"center\",\n        dataLabelAlignment: \"center\",\n        dataLabelSigFig: 1,\n        dataLabelPercentages: false,\n        hasTitle: true,\n        titleLabel: \"Trending Score\",\n        titleFontSize: 12,\n        titleAlignment: \"center\",\n        hasLegend: true,\n        legendPosition: \"top\",\n        legendFontSize: 12,\n        legendPointStyle: true,\n      },\n      id: 2,\n    },\n    {\n      data: doughnutdata,\n      total: 250,\n      index: 0,\n      type: \"doughnutchart\",\n      title: \"How much wood could a wood chuck chuck?\",\n      titleLabel: \"How much wood could a wood chuck chuck?\",\n      selected: false,\n      design_settings: {\n        hasDataLabels: true,\n        dataLabelFontSize: 12,\n        dataLabelPosition: \"center\",\n        dataLabelAlignment: \"center\",\n        dataLabelSigFig: 1,\n        dataLabelPercentages: true,\n        hasTitle: true,\n        titleLabel: \"How much wood could a wood chuck chuck?\",\n        titleFontSize: 12,\n        titleAlignment: \"center\",\n        hasLegend: true,\n        legendPosition: \"bottom\",\n        legendFontSize: 12,\n        legendPointStyle: true,\n      },\n      id: 3,\n    },\n    {\n      data: rankingQuestionData,\n      total: 250,\n      index: 0,\n      type: \"horizontalbarchart\",\n      title:\n        \"How likely are you to recommend Primary Medical Group to a friend or to a family member?\",\n      titleLabel:\n        \"How likely are you to recommend Primary Medical Group to a friend or to a family member?\",\n      selected: false,\n      design_settings: {\n        hasDataLabels: true,\n        dataLabelFontSize: 12,\n        dataLabelPosition: \"center\",\n        dataLabelAlignment: \"center\",\n        dataLabelSigFig: 0,\n        dataLabelPercentages: true,\n        hasTitle: true,\n        titleLabel:\n          \"How likely are you to recommend Primary Medical Group to a friend or to a family member?\",\n        titleFontSize: 12,\n        titleAlignment: \"center\",\n        hasLegend: false,\n        legendPosition: \"top\",\n        legendFontSize: 12,\n        legendPointStyle: true,\n      },\n      id: 4,\n    },\n    {\n      data: trendedNPSData,\n      total: 250,\n      index: 0,\n      type: \"linechart\",\n      title: \"Trended NPS\",\n      titleLabel: \"Trended NPS\",\n      selected: false,\n      design_settings: {\n        hasDataLabels: false,\n        dataLabelFontSize: 12,\n        dataLabelPosition: \"center\",\n        dataLabelAlignment: \"center\",\n        dataLabelSigFig: 1,\n        dataLabelPercentages: true,\n        hasTitle: true,\n        titleLabel: \"Trended NPS\",\n        titleFontSize: 12,\n        titleAlignment: \"center\",\n        hasLegend: true,\n        legendPosition: \"top\",\n        legendFontSize: 12,\n        legendPointStyle: true,\n      },\n      id: 5,\n    },\n  ];\n\n  const defaultChart = {\n    data: data,\n    total: 250,\n    index: 0,\n    title: \"Participant Percentage\",\n    titleLabel: \"Participant Percentage\",\n    type: \"verticalbarchart\",\n    selected: false,\n    design_settings: {\n      hasDataLabels: true,\n      dataLabelFontSize: 12,\n      dataLabelPosition: \"end\",\n      dataLabelAlignment: \"right\",\n      dataLabelSigFig: 1,\n      dataLabelPercentages: true,\n      hasTitle: true,\n      titleLabel: \"Participant Percentage\",\n      titleFontSize: 12,\n      titleAlignment: \"center\",\n      hasLegend: false,\n      legendPosition: \"top\",\n      legendFontSize: 12,\n      legendPointStyle: true,\n    },\n    id: 0,\n  };\n  const [items, setItems] = useState(display);\n  const [selectedIndex, setSelectedIndex] = useState();\n\n  function handleDeleteChart() {\n    let index = selectedIndex;\n    console.log(index);\n    var array = items; // make a separate copy of the array\n    // var index = array.indexOf(i)\n    if (index !== -1) {\n      array.splice(index, 1);\n      setItems(array);\n    }\n  }\n\n  const handleNewChart = () => {\n    var array = items;\n    defaultChart.index = items.length; // make a separate copy of the array\n    array.push(defaultChart);\n    setItems(array);\n    getVisuals();\n  };\n\n  function handleChartData(value, index) {\n    console.log(value);\n    console.log(index);\n    let array = display;\n    for (let i = 0; i < display.length; i++) {\n      if (display[i].id === value) {\n        // console.log(i)\n        // console.log(selectedIndex)\n        array[index].data = display[i].data;\n        array[index].title = display[i].title;\n        array[index].titleLabel = display[i].titleLabel;\n        console.log(array[index]);\n        console.log(display[i]);\n      }\n    }\n    setItems(array);\n    // items[selectedIndex].data = value;\n  }\n\n  function setItemIndex(item, index) {\n    item.index = index;\n  }\n\n  function getVisuals() {\n    if (fetchVisualizations.isSuccess) {\n      // console.log(fetchVisualizations.data.allVisualizations);\n      let array = fetchVisualizations.data.allVisualizations;\n      for (let i = 0; i < array.length; i++) {\n        array[i].data = setData(array[i])\n      }\n      console.log(array)\n      return array;\n    } else {\n      console.log(\"Fetch visualizaitons failed\")\n      return [];\n    }\n  }\n\n  function setData(visualization) {\n    //returns the formatted data for the charts\n    if (visualization.type === \"horizontalbarchart\") {\n      let labels = [];\n      for (let i = 0; i < visualization.Question.Choices.length; i++) {\n        labels.push(visualization.Question.Choices[i].choice_value);\n      }\n      return {\n        labels: labels,\n        // datasets is an array of objects where each object represents a set of data to display corresponding to the labels above. for brevity, we'll keep it at one object\n        datasets: [\n          {\n            // you can set indiviual colors for each bar\n            label: \"# of Votes\",\n            data: [1, 1, 0, 0, 1, 0],\n            backgroundColor: [\n              \"#15bcc7\",\n              \"#7fcfd3\",\n              \"#b5e1df\",\n              \"#ed9146\",\n              \"#edb57e\",\n              \"#f4e3c2\",\n            ],\n            borderWidth: 1,\n          },\n        ],\n      };\n    } else {\n      return {}\n    }\n  }\n\n  return (\n    <>\n      {fetchVisualizations.isLoading && <p>Loading...</p>}\n      {fetchVisualizations.isError && <p>Error</p>}\n      {fetchVisualizations.isSuccess && (\n        <SplitHorizontal fullHeight divider={settingsVisible}>\n          <div className={styles.visualizations}>\n            <DndContext\n              sensors={sensors}\n              collisionDetection={closestCenter}\n              onDragStart={handleDragStart}\n              onDragEnd={handleDragEnd}\n              onDragCancel={handleDragCancel}\n            >\n              <SortableContext items={items} strategy={rectSortingStrategy}>\n                <Grid columns={4}>\n                  {items.map((item, index) => (\n                    <>\n                      {/* {console.log(item)} */}\n                      {setItemIndex(item, index)}\n                      <SortableBox\n                        key={item.id}\n                        item={item}\n                        index={index}\n                        opensettings={setSettingsVisible}\n\n                        // handleDeletion={handleDeleteChart}\n                      />\n                    </>\n                  ))}\n                  {/* <SortableBox\n                    key={fetchVisualizations.data.allVisualizations[0].id}\n                    item={getVisuals()[0]}\n                    index={items.length}\n                    opensettings={setSettingsVisible}\n\n                    // handleDeletion={handleDeleteChart}\n                  /> */}\n                  {/* <SortablePhoto key={\"beef\"} url={\"beef\"} index={items.length + 1} numParticipants={250} /> */}\n                  <div className={styles.newchartdiv}>\n                    <button onClick={handleNewChart}>New Chart +</button>\n                  </div>\n                </Grid>\n              </SortableContext>\n\n              <DragOverlay adjustScale={true}>\n                {/* {console.log(items.indexOf(activeId))} */}\n                {activeId ? (\n                  <ChartBox item={activeId} index={items.indexOf(activeId)} />\n                ) : null}\n              </DragOverlay>\n            </DndContext>\n          </div>\n          {settingsVisible ? (\n            <div ref={ref} className={styles.settingscontainer}>\n              {items.map((item, index) => (\n                <div key={index}>\n                  {() => setSelectedIndex(index)}\n                  {item.selected == true && (\n                    <VizSettings\n                      item={item}\n                      index={index}\n                      handleDeleteChart={handleDeleteChart}\n                      questions={display}\n                      handleChartData={handleChartData}\n                      // index={index}\n                    ></VizSettings>\n                  )}\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </SplitHorizontal>\n      )}\n    </>\n  );\n\n  // function handleDragEnd(event) {\n  //   if (event.over && event.over.id === 'droppable') {\n  //     setIsDropped(true);\n  //   }\n  // }\n  function handleDragStart(event) {\n    // console.log(event);\n    setActiveId(event.active.id);\n  }\n\n  function handleDragEnd(event) {\n    const { active, over } = event;\n\n    if (active.id !== over.id) {\n      setItems((items) => {\n        const oldIndex = items.indexOf(active.id);\n        const newIndex = items.indexOf(over.id);\n\n        return arrayMove(items, oldIndex, newIndex);\n      });\n    }\n\n    setActiveId(null);\n  }\n\n  function handleDragCancel() {\n    setActiveId(null);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}