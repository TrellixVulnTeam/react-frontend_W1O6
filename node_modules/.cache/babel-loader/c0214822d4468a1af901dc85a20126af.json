{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/inputs/input_fields/NumberInput/NumberInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"./NumberInput.module.scss\";\n/**\n * An input component for choosing a number\n * @param {Int} startNumber startingNumber for the input\n * @param {type} handleNumberChange is called when Number is changed\n * @returns {React.ReactElement} a number input component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NumberInput = _ref => {\n  _s();\n\n  let {\n    startNumber,\n    handleNumberChange\n  } = _ref;\n  const [number, setNumber] = useState(startNumber);\n\n  const handleChange = value => {\n    setNumber(value);\n\n    if (handleNumberChange) {\n      handleNumberChange(number);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.numberbox,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: number,\n      onChange: e => handleChange(e.target.value),\n      min: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NumberInput, \"0kY1041n7jTb+wjqeBVG63V2XEo=\");\n\n_c = NumberInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"NumberInput\");","map":{"version":3,"names":["React","useState","styles","NumberInput","startNumber","handleNumberChange","number","setNumber","handleChange","value","numberbox","e","target"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/inputs/input_fields/NumberInput/NumberInput.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"./NumberInput.module.scss\";\n\n/**\n * An input component for choosing a number\n * @param {Int} startNumber startingNumber for the input\n * @param {type} handleNumberChange is called when Number is changed\n * @returns {React.ReactElement} a number input component\n */\n\nexport const NumberInput = ({ startNumber, handleNumberChange }) => {\n  const [number, setNumber] = useState(startNumber)\n\n  const handleChange = (value) => {\n    setNumber(value);\n    if (handleNumberChange) {\n      handleNumberChange(number);\n    }\n  };\n\n  return (\n    <div className={styles.numberbox}>\n        <input type=\"number\" value={number} onChange={(e) => handleChange(e.target.value)} min={0}/>\n    </div>\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,WAAW,GAAG,QAAyC;EAAA;;EAAA,IAAxC;IAAEC,WAAF;IAAeC;EAAf,CAAwC;EAClE,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAACG,WAAD,CAApC;;EAEA,MAAMI,YAAY,GAAIC,KAAD,IAAW;IAC9BF,SAAS,CAACE,KAAD,CAAT;;IACA,IAAIJ,kBAAJ,EAAwB;MACtBA,kBAAkB,CAACC,MAAD,CAAlB;IACD;EACF,CALD;;EAOA,oBACE;IAAK,SAAS,EAAEJ,MAAM,CAACQ,SAAvB;IAAA,uBACI;MAAO,IAAI,EAAC,QAAZ;MAAqB,KAAK,EAAEJ,MAA5B;MAAoC,QAAQ,EAAGK,CAAD,IAAOH,YAAY,CAACG,CAAC,CAACC,MAAF,CAASH,KAAV,CAAjE;MAAmF,GAAG,EAAE;IAAxF;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAfM;;GAAMN,W;;KAAAA,W"},"metadata":{},"sourceType":"module"}