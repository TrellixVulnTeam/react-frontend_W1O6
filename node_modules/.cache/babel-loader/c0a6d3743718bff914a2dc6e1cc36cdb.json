{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/VizSettings/SettingsAccordion/Settings/DataSettings.jsx\",\n    _s = $RefreshSig$();\n\n// import { NumberInput } from \"components/inputs/input_fields/NumberInput/NumberInput\";\n// import { ToggleSwitch } from \"components/inputs/input_fields/ToggleSwitch/ToggleSwitch\";\nimport { SelectField } from \"components/inputs\";\nimport React, { useState } from \"react\";\nimport styles from \"../SettingsAccordion.module.scss\"; //custom accordian\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DataSettings = _ref => {\n  _s();\n\n  let {\n    item,\n    title,\n    questions,\n    handleChartData,\n    index\n  } = _ref;\n  const [visibility, setVisibility] = useState(false);\n\n  const toggleVisibility = () => {\n    setVisibility(v => !v);\n  };\n\n  const options = [{\n    value: \"linechart\",\n    label: \"Line Chart\"\n  }, {\n    value: \"horizontalbarchart\",\n    label: \"Horizontal Bar Chart\"\n  }, {\n    value: \"verticalbarchart\",\n    label: \"Vertical Bar Chart\"\n  }, {\n    value: \"doughnutchart\",\n    label: \"Doughnut Chart\"\n  }, {\n    value: \"numbercount\",\n    label: \"Answer Count\"\n  }]; //this is a list of all the fields of the participants\n\n  const filterOptions = [{\n    value: \"bynone\",\n    label: \"None\"\n  }, {\n    value: \"byproduct\",\n    label: \"Product\"\n  }, {\n    value: \"bydoctor\",\n    label: \"Doctor\"\n  }, {\n    value: \"bylocation\",\n    label: \"Location\"\n  }, {\n    value: \"byposition\",\n    label: \"Position\"\n  }, {\n    value: \"byname\",\n    label: \"Name\"\n  }];\n  const questionOptions = [];\n  questions.map(question => {\n    let option = {\n      value: question.id,\n      label: question.titleLabel\n    };\n    questionOptions.push(option);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.header} ${visibility ? styles.accordionactive : \"\"}`,\n      onClick: toggleVisibility,\n      children: [title, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.accordionicon,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-chevron-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, item.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), visibility && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.body,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingwithlabel,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n          defaultValue: item.type,\n          onChange: e => {\n            console.log(e);\n            handleChartData(e, index);\n          },\n          options: questionOptions,\n          placeholder: \"Select...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingwithlabel,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Chart Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n          defaultValue: item.type,\n          onChange: value => {\n            item.type = value;\n          },\n          options: options,\n          placeholder: item.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.settingwithlabel,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Filter By\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SelectField // defaultValue={}\n        // onChange={(value) => {\n        //   item.type = value;\n        // }}\n        , {\n          options: filterOptions,\n          placeholder: \"Select...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DataSettings, \"mDTlr/aiQFYy0QUi6FtcxgLAtIY=\");\n\n_c = DataSettings;\n\nvar _c;\n\n$RefreshReg$(_c, \"DataSettings\");","map":{"version":3,"names":["SelectField","React","useState","styles","DataSettings","item","title","questions","handleChartData","index","visibility","setVisibility","toggleVisibility","v","options","value","label","filterOptions","questionOptions","map","question","option","id","titleLabel","push","header","accordionactive","accordionicon","name","body","settingwithlabel","type","e","console","log"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/VizSettings/SettingsAccordion/Settings/DataSettings.jsx"],"sourcesContent":["// import { NumberInput } from \"components/inputs/input_fields/NumberInput/NumberInput\";\n// import { ToggleSwitch } from \"components/inputs/input_fields/ToggleSwitch/ToggleSwitch\";\nimport { SelectField } from \"components/inputs\";\nimport React, { useState } from \"react\";\nimport styles from \"../SettingsAccordion.module.scss\";\n\n//custom accordian\nexport const DataSettings = ({ item, title, questions, handleChartData, index }) => {\n  const [visibility, setVisibility] = useState(false);\n\n  const toggleVisibility = () => {\n    setVisibility((v) => !v);\n  };\n\n  const options = [\n    { value: \"linechart\", label: \"Line Chart\" },\n    { value: \"horizontalbarchart\", label: \"Horizontal Bar Chart\" },\n    { value: \"verticalbarchart\", label: \"Vertical Bar Chart\" },\n    { value: \"doughnutchart\", label: \"Doughnut Chart\" },\n    { value: \"numbercount\", label: \"Answer Count\" },\n  ];\n\n  //this is a list of all the fields of the participants\n  const filterOptions = [\n    { value: \"bynone\", label: \"None\" },\n    { value: \"byproduct\", label: \"Product\" },\n    { value: \"bydoctor\", label: \"Doctor\" },\n    { value: \"bylocation\", label: \"Location\" },\n    { value: \"byposition\", label: \"Position\" },\n    { value: \"byname\", label: \"Name\" },\n  ];\n\n  const questionOptions = [];\n  questions.map((question) => {\n    let option = { value: question.id, label: question.titleLabel };\n    questionOptions.push(option);\n  });\n\n  return (\n    <>\n      <div\n        key={item.name}\n        className={`${styles.header} ${\n          visibility ? styles.accordionactive : \"\"\n        }`}\n        onClick={toggleVisibility}\n      >\n        {title}\n        <span className={styles.accordionicon}>\n          <i className=\"bi bi-chevron-left\"></i>\n        </span>\n      </div>\n      {visibility && (\n        <div className={styles.body}>\n          <div className={styles.settingwithlabel}>\n            <span>Data</span>\n            <SelectField\n              defaultValue={item.type}\n              onChange={(e) => {\n                console.log(e);\n                handleChartData(e, index);\n              }}\n              options={questionOptions}\n              placeholder=\"Select...\"\n            ></SelectField>\n          </div>\n          <div className={styles.settingwithlabel}>\n            <span>Chart Type</span>\n            <SelectField\n              defaultValue={item.type}\n              onChange={(value) => {\n                item.type = value;\n              }}\n              options={options}\n              placeholder={item.type}\n            ></SelectField>\n          </div>\n          <div className={styles.settingwithlabel}>\n            <span>Filter By</span>\n            <SelectField\n              // defaultValue={}\n              // onChange={(value) => {\n              //   item.type = value;\n              // }}\n              options={filterOptions}\n              placeholder=\"Select...\"\n            ></SelectField>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}