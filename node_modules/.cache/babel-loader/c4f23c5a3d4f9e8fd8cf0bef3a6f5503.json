{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/questions/Question.jsx\",\n    _s = $RefreshSig$();\n\n// import {\n//   useDeleteQuestion,\n//   useUpdateQuestion,\n// } from \"api/resources/projects/questions\";\nimport { useUpdateQuestionInstructions, useUpdateQuestionName } from \"api/resources/projects/questions\";\nimport { TextField } from \"components/inputs\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styles from \"./Question.module.scss\";\nimport { MultipleChoiceQuestion, TextQuestion, NumberScaleQuestion, NumberSliderQuestion, RankingQuestion, MatrixQuestion } from \"./types\";\n/**\n *\n * @class\n * @property {object} question The question object\n * @property {boolean} active Whether or not the question is active\n * @returns {React.ReactElement} A question component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Question = _ref => {\n  _s();\n\n  let {\n    question,\n    active,\n    activate\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const updateQuestionName = useUpdateQuestionName(id);\n  const updateQuestionInstructions = useUpdateQuestionInstructions(); // const [questionName, setQuestionName] = useState(question.name);\n  // const deleteQuestionQuery = useDeleteQuestion(id);\n\n  const showInstructions = () => {\n    return question.instructions || active;\n  };\n\n  const handleUpdateName = name => {\n    updateQuestionName.mutate({\n      id: question.id,\n      name: name\n    }); // setQuestionName(name);\n  };\n\n  const handleUpdateInstructions = instructions => {\n    updateQuestionInstructions.mutate({\n      id: question.id,\n      instructions: instructions\n    });\n  }; // const handleDeleteQuestion = () => {\n  //   activate(null);\n  //   // deleteQuestionQuery.mutate(question.id);\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${styles.questionContainer} ${active && styles.active}`,\n    onClick: () => activate(question.id),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.iconContainer,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-grip-horizontal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.item,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        value: question.questionText,\n        placeholder: \"Enter question name\",\n        label: \"Quesiton Name\",\n        inactive: !active,\n        onSave: handleUpdateName,\n        customStyles: !active && styles.headerText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), showInstructions() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.item,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        value: question.description,\n        placeholder: \"Enter question instructions\",\n        label: \"Instructions\",\n        inactive: !active,\n        onSave: handleUpdateInstructions,\n        customStyles: !active && styles.instructionsText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.spacer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), question.type === \"MultipleChoice\" && /*#__PURE__*/_jsxDEV(MultipleChoiceQuestion, {\n      question: question,\n      active: active,\n      isMultiSelect: question.questionTypeConfig.choiceQuestion.isMultiSelect,\n      otherOption: question.questionTypeConfig.choiceQuestion.hasOtherOption ? question.questionTypeConfig.choiceQuestion.otherOptionText : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), question.type === \"Matrix\" && /*#__PURE__*/_jsxDEV(MatrixQuestion, {\n      question_id: question.id,\n      active: active\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), question.type === \"NumberScale\" && /*#__PURE__*/_jsxDEV(NumberScaleQuestion, {\n      question: question,\n      active: active\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), question.type === \"NumberSlider\" && /*#__PURE__*/_jsxDEV(NumberSliderQuestion, {\n      question: question,\n      active: active\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), question.type === \"Ranking\" && /*#__PURE__*/_jsxDEV(RankingQuestion, {\n      question_id: question.id,\n      active: active\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), question.type === \"Text\" && /*#__PURE__*/_jsxDEV(TextQuestion, {\n      question_id: question.id,\n      active: active\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Question, \"/QLhxDCfbsEAJVQhLVn0ZK4euzo=\", false, function () {\n  return [useParams, useUpdateQuestionName, useUpdateQuestionInstructions];\n});\n\n_c = Question;\n\nvar _c;\n\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["useUpdateQuestionInstructions","useUpdateQuestionName","TextField","React","useParams","styles","MultipleChoiceQuestion","TextQuestion","NumberScaleQuestion","NumberSliderQuestion","RankingQuestion","MatrixQuestion","Question","question","active","activate","id","updateQuestionName","updateQuestionInstructions","showInstructions","instructions","handleUpdateName","name","mutate","handleUpdateInstructions","questionContainer","iconContainer","item","questionText","headerText","description","instructionsText","spacer","type","questionTypeConfig","choiceQuestion","isMultiSelect","hasOtherOption","otherOptionText"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/questions/Question.jsx"],"sourcesContent":["// import {\n//   useDeleteQuestion,\n//   useUpdateQuestion,\n// } from \"api/resources/projects/questions\";\nimport { useUpdateQuestionInstructions, useUpdateQuestionName } from \"api/resources/projects/questions\";\nimport { TextField } from \"components/inputs\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport styles from \"./Question.module.scss\";\nimport {\n  MultipleChoiceQuestion,\n  TextQuestion,\n  NumberScaleQuestion,\n  NumberSliderQuestion,\n  RankingQuestion,\n  MatrixQuestion,\n} from \"./types\";\n\n/**\n *\n * @class\n * @property {object} question The question object\n * @property {boolean} active Whether or not the question is active\n * @returns {React.ReactElement} A question component\n */\nexport const Question = ({ question, active, activate}) => {\n  const { id } = useParams();\n  const updateQuestionName = useUpdateQuestionName(id);\n  const updateQuestionInstructions = useUpdateQuestionInstructions();\n  // const [questionName, setQuestionName] = useState(question.name);\n  // const deleteQuestionQuery = useDeleteQuestion(id);\n\n  const showInstructions = () => {\n    return question.instructions || active;\n  };\n\n  const handleUpdateName = (name) => {\n    updateQuestionName.mutate({\n      id: question.id,\n      name: name,\n    });\n    // setQuestionName(name);\n  };\n\n  const handleUpdateInstructions = (instructions) => {\n    updateQuestionInstructions.mutate({\n      id: question.id,\n      instructions: instructions,\n    });\n  };\n\n  // const handleDeleteQuestion = () => {\n  //   activate(null);\n  //   // deleteQuestionQuery.mutate(question.id);\n  // };\n\n  return (\n    <div\n      className={`${styles.questionContainer} ${active && styles.active}`}\n      onClick={() => activate(question.id)}\n    >\n      <div className={styles.iconContainer}><i className=\"bi bi-grip-horizontal\"></i></div>\n      <div className={styles.item}>\n      <TextField\n            value={question.questionText}\n            placeholder=\"Enter question name\"\n            label=\"Quesiton Name\"\n            inactive={!active}\n            onSave={handleUpdateName}\n            customStyles={!active && styles.headerText}\n          />\n      </div>\n      {showInstructions() && (\n        <div className={styles.item}>\n          <TextField\n            value={question.description}\n            placeholder=\"Enter question instructions\"\n            label=\"Instructions\"\n            inactive={!active}\n            onSave={handleUpdateInstructions}\n            customStyles={!active && styles.instructionsText}\n          />\n        </div>\n      )}\n      <div className={styles.spacer} />\n      {question.type === \"MultipleChoice\" && (\n        <MultipleChoiceQuestion\n          question={question}\n          active={active}\n          isMultiSelect={question.questionTypeConfig.choiceQuestion.isMultiSelect}\n          otherOption={question.questionTypeConfig.choiceQuestion.hasOtherOption ? question.questionTypeConfig.choiceQuestion.otherOptionText : null}\n        />\n      )}\n      {question.type === \"Matrix\" && (\n        <MatrixQuestion question_id={question.id} active={active} />\n      )}\n      {question.type === \"NumberScale\" && (\n        <NumberScaleQuestion question={question} active={active} />\n      )}\n      {question.type === \"NumberSlider\" && (\n        <NumberSliderQuestion question={question} active={active} />\n      )}\n      {question.type === \"Ranking\" && (\n        <RankingQuestion question_id={question.id} active={active} />\n      )}\n      {question.type === \"Text\" && (\n        <TextQuestion question_id={question.id} active={active} />\n      )}\n    </div>\n  );\n};\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA,SAASA,6BAAT,EAAwCC,qBAAxC,QAAqE,kCAArE;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SACEC,sBADF,EAEEC,YAFF,EAGEC,mBAHF,EAIEC,oBAJF,EAKEC,eALF,EAMEC,cANF,QAOO,SAPP;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,MAAMC,QAAQ,GAAG,QAAmC;EAAA;;EAAA,IAAlC;IAAEC,QAAF;IAAYC,MAAZ;IAAoBC;EAApB,CAAkC;EACzD,MAAM;IAAEC;EAAF,IAASZ,SAAS,EAAxB;EACA,MAAMa,kBAAkB,GAAGhB,qBAAqB,CAACe,EAAD,CAAhD;EACA,MAAME,0BAA0B,GAAGlB,6BAA6B,EAAhE,CAHyD,CAIzD;EACA;;EAEA,MAAMmB,gBAAgB,GAAG,MAAM;IAC7B,OAAON,QAAQ,CAACO,YAAT,IAAyBN,MAAhC;EACD,CAFD;;EAIA,MAAMO,gBAAgB,GAAIC,IAAD,IAAU;IACjCL,kBAAkB,CAACM,MAAnB,CAA0B;MACxBP,EAAE,EAAEH,QAAQ,CAACG,EADW;MAExBM,IAAI,EAAEA;IAFkB,CAA1B,EADiC,CAKjC;EACD,CAND;;EAQA,MAAME,wBAAwB,GAAIJ,YAAD,IAAkB;IACjDF,0BAA0B,CAACK,MAA3B,CAAkC;MAChCP,EAAE,EAAEH,QAAQ,CAACG,EADmB;MAEhCI,YAAY,EAAEA;IAFkB,CAAlC;EAID,CALD,CAnByD,CA0BzD;EACA;EACA;EACA;;;EAEA,oBACE;IACE,SAAS,EAAG,GAAEf,MAAM,CAACoB,iBAAkB,IAAGX,MAAM,IAAIT,MAAM,CAACS,MAAO,EADpE;IAEE,OAAO,EAAE,MAAMC,QAAQ,CAACF,QAAQ,CAACG,EAAV,CAFzB;IAAA,wBAIE;MAAK,SAAS,EAAEX,MAAM,CAACqB,aAAvB;MAAA,uBAAsC;QAAG,SAAS,EAAC;MAAb;QAAA;QAAA;QAAA;MAAA;IAAtC;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAK,SAAS,EAAErB,MAAM,CAACsB,IAAvB;MAAA,uBACA,QAAC,SAAD;QACM,KAAK,EAAEd,QAAQ,CAACe,YADtB;QAEM,WAAW,EAAC,qBAFlB;QAGM,KAAK,EAAC,eAHZ;QAIM,QAAQ,EAAE,CAACd,MAJjB;QAKM,MAAM,EAAEO,gBALd;QAMM,YAAY,EAAE,CAACP,MAAD,IAAWT,MAAM,CAACwB;MANtC;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QALF,EAeGV,gBAAgB,mBACf;MAAK,SAAS,EAAEd,MAAM,CAACsB,IAAvB;MAAA,uBACE,QAAC,SAAD;QACE,KAAK,EAAEd,QAAQ,CAACiB,WADlB;QAEE,WAAW,EAAC,6BAFd;QAGE,KAAK,EAAC,cAHR;QAIE,QAAQ,EAAE,CAAChB,MAJb;QAKE,MAAM,EAAEU,wBALV;QAME,YAAY,EAAE,CAACV,MAAD,IAAWT,MAAM,CAAC0B;MANlC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAhBJ,eA2BE;MAAK,SAAS,EAAE1B,MAAM,CAAC2B;IAAvB;MAAA;MAAA;MAAA;IAAA,QA3BF,EA4BGnB,QAAQ,CAACoB,IAAT,KAAkB,gBAAlB,iBACC,QAAC,sBAAD;MACE,QAAQ,EAAEpB,QADZ;MAEE,MAAM,EAAEC,MAFV;MAGE,aAAa,EAAED,QAAQ,CAACqB,kBAAT,CAA4BC,cAA5B,CAA2CC,aAH5D;MAIE,WAAW,EAAEvB,QAAQ,CAACqB,kBAAT,CAA4BC,cAA5B,CAA2CE,cAA3C,GAA4DxB,QAAQ,CAACqB,kBAAT,CAA4BC,cAA5B,CAA2CG,eAAvG,GAAyH;IAJxI;MAAA;MAAA;MAAA;IAAA,QA7BJ,EAoCGzB,QAAQ,CAACoB,IAAT,KAAkB,QAAlB,iBACC,QAAC,cAAD;MAAgB,WAAW,EAAEpB,QAAQ,CAACG,EAAtC;MAA0C,MAAM,EAAEF;IAAlD;MAAA;MAAA;MAAA;IAAA,QArCJ,EAuCGD,QAAQ,CAACoB,IAAT,KAAkB,aAAlB,iBACC,QAAC,mBAAD;MAAqB,QAAQ,EAAEpB,QAA/B;MAAyC,MAAM,EAAEC;IAAjD;MAAA;MAAA;MAAA;IAAA,QAxCJ,EA0CGD,QAAQ,CAACoB,IAAT,KAAkB,cAAlB,iBACC,QAAC,oBAAD;MAAsB,QAAQ,EAAEpB,QAAhC;MAA0C,MAAM,EAAEC;IAAlD;MAAA;MAAA;MAAA;IAAA,QA3CJ,EA6CGD,QAAQ,CAACoB,IAAT,KAAkB,SAAlB,iBACC,QAAC,eAAD;MAAiB,WAAW,EAAEpB,QAAQ,CAACG,EAAvC;MAA2C,MAAM,EAAEF;IAAnD;MAAA;MAAA;MAAA;IAAA,QA9CJ,EAgDGD,QAAQ,CAACoB,IAAT,KAAkB,MAAlB,iBACC,QAAC,YAAD;MAAc,WAAW,EAAEpB,QAAQ,CAACG,EAApC;MAAwC,MAAM,EAAEF;IAAhD;MAAA;MAAA;MAAA;IAAA,QAjDJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsDD,CArFM;;GAAMF,Q;UACIR,S,EACYH,qB,EACQD,6B;;;KAHxBY,Q"},"metadata":{},"sourceType":"module"}