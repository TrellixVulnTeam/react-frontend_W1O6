{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/Charts/BarChartVertical/BarChartVertical.jsx\";\nimport React from \"react\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport { Bar } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ChartDataLabels);\n/**\n * A component for the vertical bar chart to be used in the visualizations of the survey results.\n * @param {type} data something\n * @param {type} title something\n * @param {type} settings something\n * @returns {Bar} a configured chartjs vertical bar chart component\n */\n\nexport const BarChartVertical = _ref => {\n  let {\n    data,\n    title,\n    settings\n  } = _ref;\n  const options = {\n    indexAxis: \"y\",\n    elements: {\n      bar: {\n        borderWidth: 2\n      }\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: settings.legendPosition,\n        display: settings.hasLegend,\n        font: {\n          size: settings.legendFontSize\n        },\n        labels: {\n          usePointStyle: settings.legendPointStyle\n        }\n      },\n      title: {\n        display: settings.hasTitle,\n        text: title,\n        align: settings.titleAlignment,\n        font: {\n          weight: \"bold\",\n          size: settings.titleFontSize,\n          family: \"'Poppins', sans-serif\"\n        }\n      },\n      datalabels: {\n        display: settings.hasDataLabels,\n        anchor: settings.dataLabelPosition,\n        align: settings.dataLabelAlignment,\n        font: {\n          weight: \"bold\",\n          size: settings.dataLabelFontSize\n        },\n        color: \"black\",\n        formatter: (value, ctx) => {\n          if (settings.dataLabelPercentages === true) {\n            let sum = 0;\n            let dataArr = ctx.chart.data.datasets[0].data;\n            dataArr.map(data => {\n              sum += data;\n            });\n            let percentage = (value * 100 / sum).toFixed(settings.dataLabelSigFig) + \"%\";\n            return percentage;\n          } else {\n            return value;\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    options: options,\n    data: data,\n    width: \"auto\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 10\n  }, this);\n};\n_c = BarChartVertical;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChartVertical\");","map":{"version":3,"names":["React","ChartDataLabels","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","register","BarChartVertical","data","title","settings","options","indexAxis","elements","bar","borderWidth","responsive","maintainAspectRatio","plugins","legend","position","legendPosition","display","hasLegend","font","size","legendFontSize","labels","usePointStyle","legendPointStyle","hasTitle","text","align","titleAlignment","weight","titleFontSize","family","datalabels","hasDataLabels","anchor","dataLabelPosition","dataLabelAlignment","dataLabelFontSize","color","formatter","value","ctx","dataLabelPercentages","sum","dataArr","chart","datasets","map","percentage","toFixed","dataLabelSigFig"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/Charts/BarChartVertical/BarChartVertical.jsx"],"sourcesContent":["import React from \"react\";\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nimport { Bar } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  ChartDataLabels\n);\n\n/**\n * A component for the vertical bar chart to be used in the visualizations of the survey results.\n * @param {type} data something\n * @param {type} title something\n * @param {type} settings something\n * @returns {Bar} a configured chartjs vertical bar chart component\n */\n\nexport const BarChartVertical = ({ data, title, settings }) => {\n  const options = {\n    indexAxis: \"y\",\n    elements: {\n      bar: {\n        borderWidth: 2,\n      },\n    },\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: settings.legendPosition,\n        display: settings.hasLegend,\n        font: {\n          size: settings.legendFontSize,\n        },\n        labels: {\n          usePointStyle: settings.legendPointStyle,\n        },\n      },\n      title: {\n        display: settings.hasTitle,\n        text: title,\n        align: settings.titleAlignment,\n        font: {\n          weight: \"bold\",\n          size: settings.titleFontSize,\n          family: \"'Poppins', sans-serif\",\n        },\n      },\n      datalabels: {\n        display: settings.hasDataLabels,\n        anchor: settings.dataLabelPosition,\n        align: settings.dataLabelAlignment,\n        font: {\n          weight: \"bold\",\n          size: settings.dataLabelFontSize,\n        },\n        color: \"black\",\n        formatter: (value, ctx) => {\n          if (settings.dataLabelPercentages === true) {\n            let sum = 0;\n            let dataArr = ctx.chart.data.datasets[0].data;\n            dataArr.map((data) => {\n              sum += data;\n            });\n            let percentage =\n              ((value * 100) / sum).toFixed(settings.dataLabelSigFig) + \"%\";\n            return percentage;\n          } else {\n            return value;\n          }\n        },\n      },\n    },\n  };\n  return <Bar options={options} data={data} width={\"auto\"} />;\n};\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF,QAQO,UARP;;AAUAN,OAAO,CAACO,QAAR,CACEN,aADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,KAJF,EAKEC,OALF,EAMEC,MANF,EAOET,eAPF;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMW,gBAAgB,GAAG,QAA+B;EAAA,IAA9B;IAAEC,IAAF;IAAQC,KAAR;IAAeC;EAAf,CAA8B;EAC7D,MAAMC,OAAO,GAAG;IACdC,SAAS,EAAE,GADG;IAEdC,QAAQ,EAAE;MACRC,GAAG,EAAE;QACHC,WAAW,EAAE;MADV;IADG,CAFI;IAOdC,UAAU,EAAE,IAPE;IAQdC,mBAAmB,EAAE,KARP;IASdC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,QAAQ,EAAEV,QAAQ,CAACW,cADb;QAENC,OAAO,EAAEZ,QAAQ,CAACa,SAFZ;QAGNC,IAAI,EAAE;UACJC,IAAI,EAAEf,QAAQ,CAACgB;QADX,CAHA;QAMNC,MAAM,EAAE;UACNC,aAAa,EAAElB,QAAQ,CAACmB;QADlB;MANF,CADD;MAWPpB,KAAK,EAAE;QACLa,OAAO,EAAEZ,QAAQ,CAACoB,QADb;QAELC,IAAI,EAAEtB,KAFD;QAGLuB,KAAK,EAAEtB,QAAQ,CAACuB,cAHX;QAILT,IAAI,EAAE;UACJU,MAAM,EAAE,MADJ;UAEJT,IAAI,EAAEf,QAAQ,CAACyB,aAFX;UAGJC,MAAM,EAAE;QAHJ;MAJD,CAXA;MAqBPC,UAAU,EAAE;QACVf,OAAO,EAAEZ,QAAQ,CAAC4B,aADR;QAEVC,MAAM,EAAE7B,QAAQ,CAAC8B,iBAFP;QAGVR,KAAK,EAAEtB,QAAQ,CAAC+B,kBAHN;QAIVjB,IAAI,EAAE;UACJU,MAAM,EAAE,MADJ;UAEJT,IAAI,EAAEf,QAAQ,CAACgC;QAFX,CAJI;QAQVC,KAAK,EAAE,OARG;QASVC,SAAS,EAAE,CAACC,KAAD,EAAQC,GAAR,KAAgB;UACzB,IAAIpC,QAAQ,CAACqC,oBAAT,KAAkC,IAAtC,EAA4C;YAC1C,IAAIC,GAAG,GAAG,CAAV;YACA,IAAIC,OAAO,GAAGH,GAAG,CAACI,KAAJ,CAAU1C,IAAV,CAAe2C,QAAf,CAAwB,CAAxB,EAA2B3C,IAAzC;YACAyC,OAAO,CAACG,GAAR,CAAa5C,IAAD,IAAU;cACpBwC,GAAG,IAAIxC,IAAP;YACD,CAFD;YAGA,IAAI6C,UAAU,GACZ,CAAER,KAAK,GAAG,GAAT,GAAgBG,GAAjB,EAAsBM,OAAtB,CAA8B5C,QAAQ,CAAC6C,eAAvC,IAA0D,GAD5D;YAEA,OAAOF,UAAP;UACD,CATD,MASO;YACL,OAAOR,KAAP;UACD;QACF;MAtBS;IArBL;EATK,CAAhB;EAwDA,oBAAO,QAAC,GAAD;IAAK,OAAO,EAAElC,OAAd;IAAuB,IAAI,EAAEH,IAA7B;IAAmC,KAAK,EAAE;EAA1C;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CA1DM;KAAMD,gB"},"metadata":{},"sourceType":"module"}