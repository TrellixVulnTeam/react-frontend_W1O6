{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/inputs/Forms/ClickSaveForm/ClickSaveForm.tsx\";\nimport React from \"react\";\nimport styles from \"./ClickSaveForm.module.scss\"; // import { useForm, Controller } from \"react-hook-form\";\n\n// import { TeamsList } from \"components/TeamsList/TeamsList\";\n// import { SelectField } from \"../../input_fields\";\nimport Button from \"components/buttons/Button/Button\";\n/**\n * A form component that takes what ever children you pass into it and turns it into a saveable form. Each child should provide a name prop\n * @param children pass in as children whatever component you want and the form will use it.\n * @param {function} onSave a function that will be called when the save button is clicked. All data from the form will be passed into this function.\n * Save button will only be displayed if onSave is provided.\n * @param {String} saveText the text to be displayed on the save button\n * @param {function} onDelete a function that will be called when the delete button is clicked. Will only be displayed if provided\n * @param {function} onClose a function that will be called when the close button is clicked. Will only be displayed if provided\n * @returns {React.ReactElement} a personalized form component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Form = _ref => {\n  let {\n    onSave,\n    saveText,\n    onDelete,\n    onClose,\n    children\n  } = _ref;\n  // const { control, handleSubmit, register, setValue, getValues } = useForm();\n  // eslint-disable-next-line\n  // const onSubmit = (data: any) => {\n  //   // alert(JSON.stringify(data));\n  //   // handleUpdate(data.name, data.description);\n  //   if (onSave) {\n  //     onSave(data);\n  //   }\n  // };\n  // const onRemove = () => {\n  //   if (onDelete) {\n  //     onDelete();\n  //     alert(\"Role has been yeeted\");\n  //   }\n  // };\n  // const onQuit = () => {\n  //   if (onClose) {\n  //     onClose();\n  //   }\n  // };\n  // function capitalizeFirstLetter(string) {\n  //   return string.charAt(0).toUpperCase() + string.slice(1);\n  // }\n  // function fixTextStyle(string) {\n  //   let newString = string.replaceAll(\"_\", \" \");\n  //   newString = capitalizeFirstLetter(newString);\n  //   console.log(newString);\n  //   return newString;\n  // }\n  // const permissions = [\"Projects\", \"Contacts\", \"Organization\", \"Distribution\"];\n  const permissions = [{\n    set_name: \"Projects\",\n    permissions: [{\n      label: \"Create Project\",\n      db_field: \"create_project\"\n    }, {\n      label: \"See all projects\",\n      db_field: \"see_all_projects\"\n    }, {\n      label: \"Send from org email\",\n      db_field: \"send_from_org_email\"\n    }, {\n      label: \"Send survey\",\n      db_field: \"send_survey\"\n    }, {\n      label: \"See surveys where\",\n      db_field: \"see_surveys_where\"\n    }, {\n      label: \"See survey results\",\n      db_field: \"see_survey_results\"\n    }]\n  }, {\n    set_name: \"Contacts\",\n    permissions: [{\n      label: \"Create contacts\",\n      db_field: \"create_contacts_for_team\"\n    }, {\n      label: \"Edit contacts\",\n      db_field: \"edit_contacts\"\n    }, {\n      label: \"Create audience\",\n      db_field: \"create_audience\"\n    }]\n  }, {\n    set_name: \"Organizaiton\",\n    permissions: [{\n      label: \"Edit user groups\",\n      db_field: \"can_edit_user_groups\"\n    }, {\n      label: \"Edit users\",\n      db_field: \"can_edit_users\"\n    }, {\n      label: \"See users\",\n      db_field: \"can_see_users\"\n    }, {\n      label: \"Create users\",\n      db_field: \"can_create_user\"\n    }, {\n      label: \"Edit org details\",\n      db_field: \"can_edit_org_details\"\n    }]\n  }, {\n    set_name: \"Distribution\",\n    permissions: [{\n      label: \"See distribution settings\",\n      db_field: \"can_see_distribution_settings\"\n    }, {\n      label: \"Edit distribution settings\",\n      db_field: \"can_edit_distribution_settings\"\n    }]\n  }]; // const projectPermissions = [\n  //   \"Create surveys\",\n  //   \"See all surveys\",\n  //   \"Send from org email\",\n  //   \"Can send surveys\",\n  //   \"See surveys where\",\n  //   \"See survey results\",\n  // ];\n  // const contactPermissions = [\n  //   \"Can create contacts\",\n  //   \"Edit contacts\",\n  //   \"Create Audience\",\n  // ];\n  // const orgPermissions = [\n  //   \"Edit user groups\",\n  //   \"Edit users\",\n  //   \"Can see users\",\n  //   \"Can edit org details\",\n  // ];\n  // const distributionPermissions = [\n  //   \"Can see distribution settings\",\n  //   \"Edit distribution settings\",\n  // ];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.formpage,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.formbody,\n        children: children.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `${item.props.labelTop ? styles.container2 : styles.container}`\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.submitcontainer,\n        children: [onClose && /*#__PURE__*/_jsxDEV(Button // className={styles.submitbutton}\n        // onClick={handleSubmit(onQuit)}\n        , {\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), onDelete && /*#__PURE__*/_jsxDEV(Button // className={styles.submitbutton}\n        // onClick={handleSubmit(onRemove)}\n        , {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), onSave && /*#__PURE__*/_jsxDEV(Button // className={styles.submitbutton}\n        // onClick={handleSubmit(onSubmit)}\n        , {\n          children: [saveText && saveText, !saveText && \"Save\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","styles","Button","Form","onSave","saveText","onDelete","onClose","children","permissions","set_name","label","db_field","formpage","formbody","map","item","i","props","labelTop","container2","container","submitcontainer"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/inputs/Forms/ClickSaveForm/ClickSaveForm.tsx"],"sourcesContent":["import React from \"react\";\nimport styles from \"./ClickSaveForm.module.scss\";\n// import { useForm, Controller } from \"react-hook-form\";\nimport { UGAccordion } from \"components/UGAccordion/UGAccordion\";\nimport AccordionItem from \"components/UGAccordion/AccordionItem\";\nimport Checkbox from \"../../input_fields/CheckboxAnimated/Checkbox\";\n// import { TeamsList } from \"components/TeamsList/TeamsList\";\n// import { SelectField } from \"../../input_fields\";\nimport Button from \"components/buttons/Button/Button\";\n\n/**\n * A form component that takes what ever children you pass into it and turns it into a saveable form. Each child should provide a name prop\n * @param children pass in as children whatever component you want and the form will use it.\n * @param {function} onSave a function that will be called when the save button is clicked. All data from the form will be passed into this function.\n * Save button will only be displayed if onSave is provided.\n * @param {String} saveText the text to be displayed on the save button\n * @param {function} onDelete a function that will be called when the delete button is clicked. Will only be displayed if provided\n * @param {function} onClose a function that will be called when the close button is clicked. Will only be displayed if provided\n * @returns {React.ReactElement} a personalized form component\n */\n\ninterface Props {\n  onSave?: Function;\n  saveText?: string;\n  onDelete?: Function;\n  onClose?: Function;\n  children: any;\n}\n\nexport const Form: React.FC<Props> = ({\n  onSave,\n  saveText,\n  onDelete,\n  onClose,\n  children,\n}) => {\n  // const { control, handleSubmit, register, setValue, getValues } = useForm();\n  // eslint-disable-next-line\n\n  // const onSubmit = (data: any) => {\n  //   // alert(JSON.stringify(data));\n  //   // handleUpdate(data.name, data.description);\n  //   if (onSave) {\n  //     onSave(data);\n  //   }\n  // };\n  // const onRemove = () => {\n  //   if (onDelete) {\n  //     onDelete();\n  //     alert(\"Role has been yeeted\");\n  //   }\n  // };\n  // const onQuit = () => {\n  //   if (onClose) {\n  //     onClose();\n  //   }\n  // };\n  // function capitalizeFirstLetter(string) {\n  //   return string.charAt(0).toUpperCase() + string.slice(1);\n  // }\n\n  // function fixTextStyle(string) {\n  //   let newString = string.replaceAll(\"_\", \" \");\n  //   newString = capitalizeFirstLetter(newString);\n  //   console.log(newString);\n  //   return newString;\n  // }\n\n  // const permissions = [\"Projects\", \"Contacts\", \"Organization\", \"Distribution\"];\n  const permissions = [\n    {\n      set_name: \"Projects\",\n      permissions: [\n        { label: \"Create Project\", db_field: \"create_project\" },\n        { label: \"See all projects\", db_field: \"see_all_projects\" },\n        { label: \"Send from org email\", db_field: \"send_from_org_email\" },\n        { label: \"Send survey\", db_field: \"send_survey\" },\n        { label: \"See surveys where\", db_field: \"see_surveys_where\" },\n        { label: \"See survey results\", db_field: \"see_survey_results\" },\n      ],\n    },\n    {\n      set_name: \"Contacts\",\n      permissions: [\n        { label: \"Create contacts\", db_field: \"create_contacts_for_team\" },\n        { label: \"Edit contacts\", db_field: \"edit_contacts\" },\n        { label: \"Create audience\", db_field: \"create_audience\" },\n      ],\n    },\n    {\n      set_name: \"Organizaiton\",\n      permissions: [\n        { label: \"Edit user groups\", db_field: \"can_edit_user_groups\" },\n        { label: \"Edit users\", db_field: \"can_edit_users\" },\n        { label: \"See users\", db_field: \"can_see_users\" },\n        { label: \"Create users\", db_field: \"can_create_user\" },\n        { label: \"Edit org details\", db_field: \"can_edit_org_details\" },\n      ],\n    },\n    {\n      set_name: \"Distribution\",\n      permissions: [\n        {\n          label: \"See distribution settings\",\n          db_field: \"can_see_distribution_settings\",\n        },\n        {\n          label: \"Edit distribution settings\",\n          db_field: \"can_edit_distribution_settings\",\n        },\n      ],\n    },\n  ];\n\n  // const projectPermissions = [\n  //   \"Create surveys\",\n  //   \"See all surveys\",\n  //   \"Send from org email\",\n  //   \"Can send surveys\",\n  //   \"See surveys where\",\n  //   \"See survey results\",\n  // ];\n  // const contactPermissions = [\n  //   \"Can create contacts\",\n  //   \"Edit contacts\",\n  //   \"Create Audience\",\n  // ];\n  // const orgPermissions = [\n  //   \"Edit user groups\",\n  //   \"Edit users\",\n  //   \"Can see users\",\n  //   \"Can edit org details\",\n  // ];\n  // const distributionPermissions = [\n  //   \"Can see distribution settings\",\n  //   \"Edit distribution settings\",\n  // ];\n\n  return (\n    <div className={styles.formpage}>\n      <form>\n        {/* <div className={styles.fullform}> */}\n        <div className={styles.formbody}>\n          {children.map((item: any, i: number) => (\n            <div key={i}>\n              <div\n                key={i}\n                className={`${\n                  item.props.labelTop ? styles.container2 : styles.container\n                }`}\n              >\n                {/* {item.props.type === \"text\" && (\n                  <>\n                    {item.props.label && (\n                      <label className={styles.inputlabel}>\n                        {item.props.label}\n                      </label>\n                    )}\n                    {item.props.labelTop && (\n                      <label className={styles.inputlabelTop}>\n                        {item.props.labelTop}\n                      </label>\n                    )}\n                    <Controller\n                      render={({ field }: any) => (\n                        <item.type\n                          {...field}\n                          placeholder={item.props.placeholder}\n                          className={styles.textinput}\n                        ></item.type>\n                      )}\n                      control={control}\n                      // defaultValue=\"yeh\"\n                      {...register(`${item.props.name}`)}\n                      {...(setValue === Object\n                        ? //`${item.props.name}`,\n                          (item.props.value,\n                          {\n                            shouldTouch: true,\n                          })\n                        : \"\")}\n                    />\n                  </>\n                )} */}\n              </div>\n              {/* {item.props.type === \"accordion\" && (\n                <UGAccordion>\n                  {permissions.map((set) => (\n                    <AccordionItem key={set.set_name} name={set.set_name}>\n                      {set.permissions.map((permission) => (\n                        <div key={permission.db_field} className={styles.item}>\n                          <Controller\n                            render={({ field }: any) => (\n                              <Checkbox\n                                {...field}\n                                checked={getValues(`${permission.db_field}`)}\n                              ></Checkbox>\n                            )}\n                            control={control}\n                            {...register(`${permission.db_field}`)}\n                            {...(setValue === Object\n                              ? \n                                (item.props.data[permission.db_field],\n                                {\n                                  shouldTouch: true,\n                                })\n                              : \"\")}\n                          />\n                          <span>{permission.label}</span>\n                        </div>\n                      ))}\n                      \n                    </AccordionItem>\n                  ))}\n                </UGAccordion>\n              )} */}\n              {/* {item.props.type === \"userlist\" && (\n                <TeamsList\n                  organization_id={item.props.organization_id}\n                  columns={item.props.columns}\n                  data={item.props.data}\n                  title={item.props.title}\n                  onSave={item.props.onSave}\n                ></TeamsList>\n              )} */}\n              {/* {item.props.type === \"select\" && (\n                <Controller\n                  render={({ field }) => (\n                    <SelectField\n                      {...field}\n                      options={item.props.options}\n                      onChange={(value) => ({\n                        ...setValue(`${item.props.name}`, value, {\n                          shouldTouch: true,\n                        }),\n                      })}\n                    ></SelectField>\n                  )}\n                  control={control}\n                  // defaultValue=\"yeh\"\n                  {...register(`${item.props.name}`)}\n                />\n              )} */}\n            </div>\n          ))}\n        </div>\n\n        <div className={styles.submitcontainer}>\n          {onClose && (\n            <Button\n              // className={styles.submitbutton}\n              // onClick={handleSubmit(onQuit)}\n            >\n              Close\n            </Button>\n          )}\n          {onDelete && (\n            <Button\n              // className={styles.submitbutton}\n              // onClick={handleSubmit(onRemove)}\n            >\n              Delete\n            </Button>\n          )}\n          {onSave && (\n            <Button\n              // className={styles.submitbutton}\n              // onClick={handleSubmit(onSubmit)}\n            >\n              {saveText && saveText}\n              {!saveText && \"Save\"}\n            </Button>\n          )}\n        </div>\n        {/* </div> */}\n      </form>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}