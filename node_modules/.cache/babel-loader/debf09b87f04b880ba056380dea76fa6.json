{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/Charts/LineChart/LineChart.jsx\";\nimport React from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n/**\n * A component for the Line Chart to be used in the visualizations of the survey results.\n * @param {type} data something\n * @param {type} title something\n * @param {type} settings something\n * @returns {Bar} a configured chartjs Line Chart component\n */\n\nexport const LineChart = _ref => {\n  let {\n    data,\n    title,\n    settings\n  } = _ref;\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: settings.hasLegend,\n        position: settings.legendPosition,\n        font: {\n          size: settings.legendFontSize\n        },\n        labels: {\n          usePointStyle: settings.legendPointStyle\n        }\n      },\n      title: {\n        display: settings.hasTitle,\n        text: title,\n        align: settings.titleAlignment,\n        font: {\n          weight: \"bold\",\n          size: settings.titleFontSize,\n          family: \"'Poppins', sans-serif\"\n        }\n      },\n      datalabels: {\n        display: settings.hasDataLabels,\n        anchor: settings.dataLabelPosition,\n        align: settings.dataLabelAlignment,\n        font: {\n          weight: \"bold\",\n          size: settings.dataLabelFontSize\n        },\n        color: \"black\",\n        formatter: (value, ctx) => {\n          if (settings.dataLabelPercentages === true) {\n            let sum = 0;\n            let dataArr = ctx.chart.data.datasets[0].data;\n            dataArr.map(data => {\n              sum += data;\n            });\n            let percentage = (value * 100 / sum).toFixed(settings.dataLabelSigFig) + \"%\";\n            return percentage;\n          } else {\n            return value;\n          }\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    options: options,\n    data: data,\n    width: \"auto\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }, this);\n};\n_c = LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","register","LineChart","data","title","settings","options","responsive","maintainAspectRatio","plugins","legend","display","hasLegend","position","legendPosition","font","size","legendFontSize","labels","usePointStyle","legendPointStyle","hasTitle","text","align","titleAlignment","weight","titleFontSize","family","datalabels","hasDataLabels","anchor","dataLabelPosition","dataLabelAlignment","dataLabelFontSize","color","formatter","value","ctx","dataLabelPercentages","sum","dataArr","chart","datasets","map","percentage","toFixed","dataLabelSigFig"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/Charts/LineChart/LineChart.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\n/**\n * A component for the Line Chart to be used in the visualizations of the survey results.\n * @param {type} data something\n * @param {type} title something\n * @param {type} settings something\n * @returns {Bar} a configured chartjs Line Chart component\n */\n\nexport const LineChart = ({ data, title, settings}) => {\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        display: settings.hasLegend,\n        position: settings.legendPosition,\n        font: {\n          size: settings.legendFontSize,\n        },\n        labels: {\n          usePointStyle: settings.legendPointStyle,\n        },\n      },\n      title: {\n        display: settings.hasTitle,\n        text: title,\n        align: settings.titleAlignment,\n        font: {\n          weight: \"bold\",\n          size: settings.titleFontSize,\n          family: \"'Poppins', sans-serif\"\n        },\n      },\n      datalabels: {\n        display: settings.hasDataLabels,\n        anchor: settings.dataLabelPosition,\n        align: settings.dataLabelAlignment,\n        font: {\n          weight: \"bold\",\n          size: settings.dataLabelFontSize,\n        },\n        color: \"black\",\n        formatter: (value, ctx) => {\n          if (settings.dataLabelPercentages === true) {\n            let sum = 0;\n            let dataArr = ctx.chart.data.datasets[0].data;\n            dataArr.map((data) => {\n              sum += data;\n            });\n            let percentage =\n              ((value * 100) / sum).toFixed(settings.dataLabelSigFig) + \"%\";\n            return percentage;\n          } else {\n            return value;\n          }\n        },\n      },\n    },\n  };\n  return (\n      <Line options={options} data={data} width={\"auto\"}/>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,KAAK,IAAIC,OADX,EAEEC,aAFF,EAGEC,WAHF,EAIEC,YAJF,EAKEC,WALF,EAMEC,KANF,EAOEC,OAPF,EAQEC,MARF,QASO,UATP;AAUA,SAASC,IAAT,QAAqB,iBAArB;;AACAR,OAAO,CAACS,QAAR,CACER,aADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,WAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,MAPF;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMG,SAAS,GAAG,QAA8B;EAAA,IAA7B;IAAEC,IAAF;IAAQC,KAAR;IAAeC;EAAf,CAA6B;EACrD,MAAMC,OAAO,GAAG;IACdC,UAAU,EAAE,IADE;IAEdC,mBAAmB,EAAE,KAFP;IAGdC,OAAO,EAAE;MACPC,MAAM,EAAE;QACNC,OAAO,EAAEN,QAAQ,CAACO,SADZ;QAENC,QAAQ,EAAER,QAAQ,CAACS,cAFb;QAGNC,IAAI,EAAE;UACJC,IAAI,EAAEX,QAAQ,CAACY;QADX,CAHA;QAMNC,MAAM,EAAE;UACNC,aAAa,EAAEd,QAAQ,CAACe;QADlB;MANF,CADD;MAWPhB,KAAK,EAAE;QACLO,OAAO,EAAEN,QAAQ,CAACgB,QADb;QAELC,IAAI,EAAElB,KAFD;QAGLmB,KAAK,EAAElB,QAAQ,CAACmB,cAHX;QAILT,IAAI,EAAE;UACJU,MAAM,EAAE,MADJ;UAEJT,IAAI,EAAEX,QAAQ,CAACqB,aAFX;UAGJC,MAAM,EAAE;QAHJ;MAJD,CAXA;MAqBPC,UAAU,EAAE;QACVjB,OAAO,EAAEN,QAAQ,CAACwB,aADR;QAEVC,MAAM,EAAEzB,QAAQ,CAAC0B,iBAFP;QAGVR,KAAK,EAAElB,QAAQ,CAAC2B,kBAHN;QAIVjB,IAAI,EAAE;UACJU,MAAM,EAAE,MADJ;UAEJT,IAAI,EAAEX,QAAQ,CAAC4B;QAFX,CAJI;QAQVC,KAAK,EAAE,OARG;QASVC,SAAS,EAAE,CAACC,KAAD,EAAQC,GAAR,KAAgB;UACzB,IAAIhC,QAAQ,CAACiC,oBAAT,KAAkC,IAAtC,EAA4C;YAC1C,IAAIC,GAAG,GAAG,CAAV;YACA,IAAIC,OAAO,GAAGH,GAAG,CAACI,KAAJ,CAAUtC,IAAV,CAAeuC,QAAf,CAAwB,CAAxB,EAA2BvC,IAAzC;YACAqC,OAAO,CAACG,GAAR,CAAaxC,IAAD,IAAU;cACpBoC,GAAG,IAAIpC,IAAP;YACD,CAFD;YAGA,IAAIyC,UAAU,GACZ,CAAER,KAAK,GAAG,GAAT,GAAgBG,GAAjB,EAAsBM,OAAtB,CAA8BxC,QAAQ,CAACyC,eAAvC,IAA0D,GAD5D;YAEA,OAAOF,UAAP;UACD,CATD,MASO;YACL,OAAOR,KAAP;UACD;QACF;MAtBS;IArBL;EAHK,CAAhB;EAkDA,oBACI,QAAC,IAAD;IAAM,OAAO,EAAE9B,OAAf;IAAwB,IAAI,EAAEH,IAA9B;IAAoC,KAAK,EAAE;EAA3C;IAAA;IAAA;IAAA;EAAA,QADJ;AAGD,CAtDM;KAAMD,S"},"metadata":{},"sourceType":"module"}