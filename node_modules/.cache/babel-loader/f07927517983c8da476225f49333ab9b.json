{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/questions/types/MultipleChoiceQuestion.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // import { useParams } from \"react-router-dom\";\n// eslint-disable-next-line no-unused-vars\n\nimport { MultipleChoice } from \"components/inputs/input_fields/MultipleChoice/MultipleChoice\";\nimport { useUpdateQuestionConfig } from \"api/resources/projects/questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MultipleChoiceQuestion = _ref => {\n  _s();\n\n  let {\n    question,\n    // eslint-disable-next-line no-unused-vars\n    active,\n    // eslint-disable-next-line no-unused-vars\n    isMultiSelect,\n    // eslint-disable-next-line no-unused-vars\n    otherOption\n  } = _ref;\n  // const { id } = useParams();\n  const updateQuestionConfig = useUpdateQuestionConfig(); // eslint-disable-next-line no-unused-vars\n\n  const handleUpdateQuestionChoices = choice => {\n    let choices = question.questionTypeConfig.choiceQuestion.choices;\n    let index = choices.findIndex(x => x.id === choice.id);\n    choices[index] = choice;\n    updateQuestionConfig.mutate({\n      id: question.id,\n      questionTypeConfig: {\n        choiceQuestion: {\n          isMultiSelect: question.questionTypeConfig.choiceQuestion.isMultiSelect,\n          isRandomized: question.questionTypeConfig.choiceQuestion.isRandomized,\n          hasOtherOption: question.questionTypeConfig.choiceQuestion.hasOtherOption,\n          otherOptionText: question.questionTypeConfig.choiceQuestion.otherOptionText,\n          choices: choices\n        }\n      }\n    });\n  };\n\n  function shortId() {\n    return \"_\" + Math.random().toString(36).substr(2, 9);\n  } // eslint-disable-next-line no-unused-vars\n\n\n  const handleCreateQuestionChoice = () => {\n    let choices = question.questionTypeConfig.choiceQuestion.choices;\n    choices.push({\n      id: shortId(),\n      name: \"\"\n    });\n    updateQuestionConfig.mutate({\n      id: question.id,\n      questionTypeConfig: {\n        choiceQuestion: {\n          isMultiSelect: question.questionTypeConfig.choiceQuestion.isMultiSelect,\n          isRandomized: question.questionTypeConfig.choiceQuestion.isRandomized,\n          hasOtherOption: question.questionTypeConfig.choiceQuestion.hasOtherOption,\n          otherOptionText: question.questionTypeConfig.choiceQuestion.otherOptionText,\n          choices: choices\n        }\n      }\n    });\n  }; // eslint-disable-next-line no-unused-vars\n\n\n  const handleDeleteQuestionChoice = choiceId => {\n    console.log(choiceId);\n    let choices = question.questionTypeConfig.choiceQuestion.choices;\n    let index = choices.findIndex(x => x.id === choiceId);\n    choices.splice(index, 1);\n    updateQuestionConfig.mutate({\n      id: question.id,\n      question_type_config: {\n        choice_question: {\n          isMultiSelect: question.questionTypeConfig.choiceQuestion.isMultiSelect,\n          isRandomized: question.questionTypeConfig.choiceQuestion.isRandomized,\n          hasOtherOption: question.questionTypeConfig.choiceQuestion.hasOtherOption,\n          otherOptionText: question.questionTypeConfig.choiceQuestion.otherOptionText,\n          choices: choices\n        }\n      }\n    });\n  }; // eslint-disable-next-line no-unused-vars\n\n\n  const handleUpdateOtherText = text => {\n    updateQuestionConfig.mutate({\n      id: question.id,\n      question_type_config: {\n        choice_question: {\n          isMultiSelect: question.questionTypeConfig.choiceQuestion.isMultiSelect,\n          isRandomized: question.questionTypeConfig.choiceQuestion.isRandomized,\n          hasOtherOption: question.questionTypeConfig.choiceQuestion.hasOtherOption,\n          otherOptionText: text,\n          choices: question.questionTypeConfig.choiceQuestion.choices\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MultipleChoice, {\n      name: question.id,\n      options: question.questionTypeConfig.choiceQuestion.choice,\n      handleNameChange: handleUpdateQuestionChoices,\n      handleDelete: handleDeleteQuestionChoice,\n      handleOtherChange: handleUpdateOtherText,\n      active: active,\n      isMultiSelect: isMultiSelect,\n      otherOption: otherOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), active && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `ml-2`,\n      style: {\n        color: \"#A3A4A8\"\n      },\n      onClick: handleCreateQuestionChoice,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-plus-lg mr-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), \"Add Option\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true); // }\n};\n\n_s(MultipleChoiceQuestion, \"GKk2Y6+iMzF/QxyqPowlpWzZ6jg=\", false, function () {\n  return [useUpdateQuestionConfig];\n});\n\n_c = MultipleChoiceQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"MultipleChoiceQuestion\");","map":{"version":3,"names":["React","MultipleChoice","useUpdateQuestionConfig","MultipleChoiceQuestion","question","active","isMultiSelect","otherOption","updateQuestionConfig","handleUpdateQuestionChoices","choice","choices","questionTypeConfig","choiceQuestion","index","findIndex","x","id","mutate","isRandomized","hasOtherOption","otherOptionText","shortId","Math","random","toString","substr","handleCreateQuestionChoice","push","name","handleDeleteQuestionChoice","choiceId","console","log","splice","question_type_config","choice_question","handleUpdateOtherText","text","color"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/questions/types/MultipleChoiceQuestion.jsx"],"sourcesContent":["import React from \"react\";\n// import { useParams } from \"react-router-dom\";\n  // eslint-disable-next-line no-unused-vars\nimport { MultipleChoice } from \"components/inputs/input_fields/MultipleChoice/MultipleChoice\";\nimport { useUpdateQuestionConfig } from \"api/resources/projects/questions\";\n\nexport const MultipleChoiceQuestion = ({\n  question,\n   // eslint-disable-next-line no-unused-vars\n  active,\n   // eslint-disable-next-line no-unused-vars\n  isMultiSelect,\n   // eslint-disable-next-line no-unused-vars\n  otherOption,\n}) => {\n  // const { id } = useParams();\n  const updateQuestionConfig = useUpdateQuestionConfig();\n\n   // eslint-disable-next-line no-unused-vars\n  const handleUpdateQuestionChoices = (choice) => {\n    let choices = question.questionTypeConfig.choiceQuestion.choices;\n    let index = choices.findIndex((x) => x.id === choice.id);\n    choices[index] = choice;\n    updateQuestionConfig.mutate({\n      id: question.id,\n      questionTypeConfig: {\n        choiceQuestion: {\n          isMultiSelect: question.questionTypeConfig.choiceQuestion.isMultiSelect,\n          isRandomized: question.questionTypeConfig.choiceQuestion.isRandomized,\n          hasOtherOption: question.questionTypeConfig.choiceQuestion.hasOtherOption,\n          otherOptionText: question.questionTypeConfig.choiceQuestion.otherOptionText,\n          choices: choices,\n        },\n      },\n    });\n  };\n\n  function shortId() {\n    return \"_\" + Math.random().toString(36).substr(2, 9);\n  }\n\n // eslint-disable-next-line no-unused-vars\n  const handleCreateQuestionChoice = () => {\n    let choices = question.questionTypeConfig.choiceQuestion.choices;\n    choices.push({id: shortId(), name: \"\"})\n    updateQuestionConfig.mutate({\n      id: question.id,\n      questionTypeConfig: {\n        choiceQuestion: {\n          isMultiSelect: question.questionTypeConfig.choiceQuestion.isMultiSelect,\n          isRandomized: question.questionTypeConfig.choiceQuestion.isRandomized,\n          hasOtherOption: question.questionTypeConfig.choiceQuestion.hasOtherOption,\n          otherOptionText:question.questionTypeConfig.choiceQuestion.otherOptionText,\n          choices: choices,\n        },\n      }\n    });\n  };\n\n   // eslint-disable-next-line no-unused-vars\n  const handleDeleteQuestionChoice = (choiceId) => {\n    console.log(choiceId);\n    let choices = question.questionTypeConfig.choiceQuestion.choices;\n    let index = choices.findIndex((x) => x.id === choiceId);\n    choices.splice(index, 1);\n    updateQuestionConfig.mutate({\n      id: question.id,\n      question_type_config: {\n        choice_question: {\n          isMultiSelect: question.questionTypeConfig.choiceQuestion.isMultiSelect,\n          isRandomized: question.questionTypeConfig.choiceQuestion.isRandomized,\n          hasOtherOption: question.questionTypeConfig.choiceQuestion.hasOtherOption,\n          otherOptionText: question.questionTypeConfig.choiceQuestion.otherOptionText,\n          choices: choices,\n        },\n      }\n    });\n  };\n\n   // eslint-disable-next-line no-unused-vars\n  const handleUpdateOtherText = (text) => {\n    updateQuestionConfig.mutate({\n      id: question.id,\n      question_type_config: {\n        choice_question: {\n          isMultiSelect: question.questionTypeConfig.choiceQuestion.isMultiSelect,\n          isRandomized: question.questionTypeConfig.choiceQuestion.isRandomized,\n          hasOtherOption: question.questionTypeConfig.choiceQuestion.hasOtherOption,\n          otherOptionText: text,\n          choices: question.questionTypeConfig.choiceQuestion.choices,\n        },\n      }\n    });\n  };\n\n  return (\n    <>\n      <MultipleChoice\n        name={question.id}\n        options={question.questionTypeConfig.choiceQuestion.choice}\n        handleNameChange={handleUpdateQuestionChoices}\n        handleDelete={handleDeleteQuestionChoice}\n        handleOtherChange={handleUpdateOtherText}\n        active={active}\n        isMultiSelect={isMultiSelect}\n        otherOption={otherOption}\n      />\n      {active && (\n        <button\n          className={`ml-2`}\n          style={{ color: \"#A3A4A8\" }}\n          onClick={handleCreateQuestionChoice}\n        >\n          <i className=\"bi bi-plus-lg mr-3\"></i>\n          Add Option\n        </button>\n      )}\n    </>\n  );\n  // }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}