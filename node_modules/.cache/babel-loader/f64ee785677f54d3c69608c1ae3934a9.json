{"ast":null,"code":"var _jsxFileName = \"/Users/natehanson/Desktop/reactiondata-frontend/src/components/layouts/SplitHorizontal/SplitHorizontal.tsx\";\n//External\nimport React from \"react\"; //Internal\n\nimport styles from \"./SplitHorizontal.module.scss\";\n/**\n * A component that splits a container into two halves.\n * @param children accepts an array of TWO React elements. The first will be displayed on the left of the split, the second on the right.\n * @param {boolean} leftShrink a boolean that determines if the left element should be shrunk to fit content\n * @param {boolean} rightShrink a boolean that determines if the right element should be shrunk to fit content\n * @param {int} leftWidth a number (0-12) that determines the width of the left element. The right element will be 12 - leftWidth\n * @param {boolean} fullHeight a boolean that determines if the elements should be full height\n * @param {boolean} divider a boolean that determines if a divider should be placed between the two elements\n * @returns {React.ReactElement} a split horizontal component\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SplitHorizontal = _ref => {\n  let {\n    children,\n    leftShrink,\n    rightShrink,\n    leftWidth,\n    fullHeight,\n    divider\n  } = _ref;\n  const [left, right] = children;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.splitPage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.leftSide,\n      children: left\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), divider && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vr \" + styles.divider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.rightSide,\n      children: right\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = SplitHorizontal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SplitHorizontal\");","map":{"version":3,"names":["React","styles","SplitHorizontal","children","leftShrink","rightShrink","leftWidth","fullHeight","divider","left","right","splitPage","leftSide","rightSide"],"sources":["/Users/natehanson/Desktop/reactiondata-frontend/src/components/layouts/SplitHorizontal/SplitHorizontal.tsx"],"sourcesContent":["//External\nimport React from \"react\";\n\n//Internal\nimport styles from \"./SplitHorizontal.module.scss\";\n\n/**\n * A component that splits a container into two halves.\n * @param children accepts an array of TWO React elements. The first will be displayed on the left of the split, the second on the right.\n * @param {boolean} leftShrink a boolean that determines if the left element should be shrunk to fit content\n * @param {boolean} rightShrink a boolean that determines if the right element should be shrunk to fit content\n * @param {int} leftWidth a number (0-12) that determines the width of the left element. The right element will be 12 - leftWidth\n * @param {boolean} fullHeight a boolean that determines if the elements should be full height\n * @param {boolean} divider a boolean that determines if a divider should be placed between the two elements\n * @returns {React.ReactElement} a split horizontal component\n */\n\n interface Props {\n  children: any,\n  leftShrink?: boolean,\n  rightShrink?: boolean,\n  leftWidth?: number,\n  fullHeight?: boolean,\n  divider?: boolean,\n}\n\nexport const SplitHorizontal: React.FC<Props> = ({\n  children,\n  leftShrink,\n  rightShrink,\n  leftWidth,\n  fullHeight,\n  divider,\n}) => {\n  const [left, right] = children;\n\n\n  return (\n    <div className={styles.splitPage}>\n      <div className={styles.leftSide}>{left}</div>\n      {divider && <div className={\"vr \" + styles.divider} />}\n      <div className={styles.rightSide}>{right}</div>\n    </div>\n  );\n};\n"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAWA,OAAO,MAAMC,eAAgC,GAAG,QAO1C;EAAA,IAP2C;IAC/CC,QAD+C;IAE/CC,UAF+C;IAG/CC,WAH+C;IAI/CC,SAJ+C;IAK/CC,UAL+C;IAM/CC;EAN+C,CAO3C;EACJ,MAAM,CAACC,IAAD,EAAOC,KAAP,IAAgBP,QAAtB;EAGA,oBACE;IAAK,SAAS,EAAEF,MAAM,CAACU,SAAvB;IAAA,wBACE;MAAK,SAAS,EAAEV,MAAM,CAACW,QAAvB;MAAA,UAAkCH;IAAlC;MAAA;MAAA;MAAA;IAAA,QADF,EAEGD,OAAO,iBAAI;MAAK,SAAS,EAAE,QAAQP,MAAM,CAACO;IAA/B;MAAA;MAAA;MAAA;IAAA,QAFd,eAGE;MAAK,SAAS,EAAEP,MAAM,CAACY,SAAvB;MAAA,UAAmCH;IAAnC;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAlBM;KAAMR,e"},"metadata":{},"sourceType":"module"}